{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v4.json", "dbt_version": "1.4.4", "generated_at": "2023-11-08T20:53:06.827027Z", "invocation_id": "08b3e402-a501-4f92-95ac-b6d9ad8a6a04", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T20:53:02.466635Z", "completed_at": "2023-11-08T20:53:02.472093Z"}, {"name": "execute", "started_at": "2023-11-08T20:53:02.472931Z", "completed_at": "2023-11-08T20:53:03.736775Z"}], "thread_id": "Thread-1", "execution_time": 1.2725439071655273, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"NDR\", \"target_name\": \"dev\", \"node_id\": \"model.NDR.oy_dbt_ndr_accounts_dates\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_ndr_accounts_dates__dbt_tmp\" include schema privileges as (\n    with dates as\n(\nselect \t\tdistinct First_date, Year, Month \nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_date_range\" -- verticadb\".\"analytics\".\"oy_dbt_date_range\n),\naccounts as\n(\nselect \t\tdistinct Client_ID, Client_Account_Name as Client_Name, business_domain\n\t\t\t, 2021 as '2021', 2022 as '2022', 2023 as '2023', 2024 as '2024'\nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_GL_revenue_all_domains\" -- verticadb\".\"analytics.oy_v_GL_revenue_all_domains\n--where       Client_ID is not null\n)\nselect \t\tFirst_date, dt.Year::VARCHAR , Month\n\t\t\t, COALESCE (ac1.Client_ID, ac2.Client_ID, ac3.Client_ID, ac4.Client_ID) as Client_ID\n\t\t\t, COALESCE (ac1.Client_Name, ac2.Client_Name, ac3.Client_Name, ac4.Client_Name) as Client_Name\n\t\t\t, COALESCE (ac1.business_domain, ac2.business_domain, ac3.business_domain, ac4.business_domain) as business_domain\nfrom\t\tdates as dt\n------------\nleft join \taccounts as ac1\non \t\t\tdt.year = ac1.'2021'\n------------\nleft join \taccounts as ac2\non \t\t\tdt.year = ac2.'2022'\n------------\nleft join \taccounts as ac3\non \t\t\tdt.year = ac3.'2023'\n------------\nleft join \taccounts as ac4\non \t\t\tdt.year = ac4.'2024'\n------------\nwhere \t\tFirst_date < now() - day(now())\norder by \tClient_Name, dt.First_date\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"NDR\", \"target_name\": \"dev\", \"node_id\": \"model.NDR.oy_dbt_ndr_accounts_dates\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_ndr_accounts_dates__dbt_tmp\" include schema privileges as (\n    with dates as\n(\nselect \t\tdistinct First_date, Year, Month \nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_date_range\" -- verticadb\".\"analytics\".\"oy_dbt_date_range\n),\naccounts as\n(\nselect \t\tdistinct Client_ID, Client_Account_Name as Client_Name, business_domain\n\t\t\t, 2021 as '2021', 2022 as '2022', 2023 as '2023', 2024 as '2024'\nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_GL_revenue_all_domains\" -- verticadb\".\"analytics.oy_v_GL_revenue_all_domains\n--where       Client_ID is not null\n)\nselect \t\tFirst_date, dt.Year::VARCHAR , Month\n\t\t\t, COALESCE (ac1.Client_ID, ac2.Client_ID, ac3.Client_ID, ac4.Client_ID) as Client_ID\n\t\t\t, COALESCE (ac1.Client_Name, ac2.Client_Name, ac3.Client_Name, ac4.Client_Name) as Client_Name\n\t\t\t, COALESCE (ac1.business_domain, ac2.business_domain, ac3.business_domain, ac4.business_domain) as business_domain\nfrom\t\tdates as dt\n------------\nleft join \taccounts as ac1\non \t\t\tdt.year = ac1.'2021'\n------------\nleft join \taccounts as ac2\non \t\t\tdt.year = ac2.'2022'\n------------\nleft join \taccounts as ac3\non \t\t\tdt.year = ac3.'2023'\n------------\nleft join \taccounts as ac4\non \t\t\tdt.year = ac4.'2024'\n------------\nwhere \t\tFirst_date < now() - day(now())\norder by \tClient_Name, dt.First_date\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.NDR.oy_dbt_ndr_accounts_dates"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T20:53:03.743951Z", "completed_at": "2023-11-08T20:53:03.749149Z"}, {"name": "execute", "started_at": "2023-11-08T20:53:03.749792Z", "completed_at": "2023-11-08T20:53:05.014757Z"}], "thread_id": "Thread-1", "execution_time": 1.2733230590820312, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"NDR\", \"target_name\": \"dev\", \"node_id\": \"model.NDR.oy_dbt_revenue_union\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_revenue_union__dbt_tmp\" include schema privileges as (\n    \n\n(\nselect \t\t\tad.First_date, ad.Year, ad.Month, ad.Client_ID, ad.Client_Name, ad.business_domain\n\t\t\t\t, case \twhen year(ad.First_date) = year(now()) and month(ad.First_date)>=month(now()) then null \n\t\t\t\t\t\twhen Revenue_USD is null then 0 else Revenue_USD \n\t\t\t\tend as Revenue_USD\nfrom \t\t\t\"verticadb\".\"analytics\".\"oy_dbt_ndr_accounts_dates\" as ad -- analytics.oy_dbt_ndr_accounts_dates\nleft join\t\t\"verticadb\".\"analytics\".\"oy_dbt_GL_revenue_all_domains\" as rev -- analytics.oy_v_GL_revenue_all_domains\non\t\t\t\tad.First_date = rev.first_date\n\t\t\t\tand ad.Client_ID = rev.Client_ID\n\t\t\t\tand ad.Client_Name = rev.Client_Account_Name\n\t\t\t\tand ad.business_domain = rev.business_domain\nwhere \t\t\t1=1 \n                and ad.Client_ID is not null \n                and rev.Client_ID is not null\n)\nUNION\n(\nselect \t\t\tad.First_date, ad.Year, ad.Month, ad.Client_ID, ad.Client_Name, ad.business_domain\n\t\t\t\t, case \twhen year(ad.First_date) = year(now()) and month(ad.First_date)>=month(now()) then null \n\t\t\t\t\t\twhen rev.Revenue_USD is null then 0 else Revenue_USD \n\t\t\t\tend as Revenue_USD\nfrom \t\t\t\"verticadb\".\"analytics\".\"oy_dbt_ndr_accounts_dates\" as ad\nleft join\t\t\"verticadb\".\"analytics\".\"oy_dbt_GL_revenue_all_domains\" as rev\non\t\t\t\tad.First_date = rev.first_date\n\t\t\t\tand ad.business_domain = rev.business_domain\nwhere \t\t\t1=1 \n                and ad.Client_ID is null \n                and rev.Client_ID is null \n                and rev.Revenue_USD<>0\n)\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"NDR\", \"target_name\": \"dev\", \"node_id\": \"model.NDR.oy_dbt_revenue_union\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_revenue_union__dbt_tmp\" include schema privileges as (\n    \n\n(\nselect \t\t\tad.First_date, ad.Year, ad.Month, ad.Client_ID, ad.Client_Name, ad.business_domain\n\t\t\t\t, case \twhen year(ad.First_date) = year(now()) and month(ad.First_date)>=month(now()) then null \n\t\t\t\t\t\twhen Revenue_USD is null then 0 else Revenue_USD \n\t\t\t\tend as Revenue_USD\nfrom \t\t\t\"verticadb\".\"analytics\".\"oy_dbt_ndr_accounts_dates\" as ad -- analytics.oy_dbt_ndr_accounts_dates\nleft join\t\t\"verticadb\".\"analytics\".\"oy_dbt_GL_revenue_all_domains\" as rev -- analytics.oy_v_GL_revenue_all_domains\non\t\t\t\tad.First_date = rev.first_date\n\t\t\t\tand ad.Client_ID = rev.Client_ID\n\t\t\t\tand ad.Client_Name = rev.Client_Account_Name\n\t\t\t\tand ad.business_domain = rev.business_domain\nwhere \t\t\t1=1 \n                and ad.Client_ID is not null \n                and rev.Client_ID is not null\n)\nUNION\n(\nselect \t\t\tad.First_date, ad.Year, ad.Month, ad.Client_ID, ad.Client_Name, ad.business_domain\n\t\t\t\t, case \twhen year(ad.First_date) = year(now()) and month(ad.First_date)>=month(now()) then null \n\t\t\t\t\t\twhen rev.Revenue_USD is null then 0 else Revenue_USD \n\t\t\t\tend as Revenue_USD\nfrom \t\t\t\"verticadb\".\"analytics\".\"oy_dbt_ndr_accounts_dates\" as ad\nleft join\t\t\"verticadb\".\"analytics\".\"oy_dbt_GL_revenue_all_domains\" as rev\non\t\t\t\tad.First_date = rev.first_date\n\t\t\t\tand ad.business_domain = rev.business_domain\nwhere \t\t\t1=1 \n                and ad.Client_ID is null \n                and rev.Client_ID is null \n                and rev.Revenue_USD<>0\n)\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.NDR.oy_dbt_revenue_union"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T20:53:05.020887Z", "completed_at": "2023-11-08T20:53:05.026241Z"}, {"name": "execute", "started_at": "2023-11-08T20:53:05.026864Z", "completed_at": "2023-11-08T20:53:06.344544Z"}], "thread_id": "Thread-1", "execution_time": 1.3259971141815186, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"NDR\", \"target_name\": \"dev\", \"node_id\": \"model.NDR.oy_dbt_ndr_revenue\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_ndr_revenue__dbt_tmp\" include schema privileges as (\n    with ytd_revenue as \n(\nselect \t\t\t*\n\t\t\t\t, sum(Revenue_USD) over (partition by Client_ID, business_domain, year order by First_date \n\t\t\t\t\t\t\t\t\t\t\tROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) \n\t\t\t\tas YTD_Revenue\nfrom \t\t\t\"verticadb\".\"analytics\".\"oy_dbt_revenue_union\"\n),\nlag_rev as\n(\nselect \t\t\t*\n\t\t\t\t, lag(YTD_Revenue,12,0) over (partition by Client_ID, business_domain order by First_date) as lag_YTD_Rev\nfrom \t\t\tytd_revenue\norder by \t\tClient_ID, month, year\n),\nndr_rev as\n(\nselect \t\t\tlag_rev.*\n\t\t\t\t, case when lag_YTD_Rev=0 or lag_YTD_Rev is null then 0 else YTD_Revenue end as NDR_Revenue\nfrom \t\t\tlag_rev\n),\nndr as\n(\nselect\t\t\t*\n\t\t\t\t, case when lag_YTD_Rev=0 then null else round(100*NDR_Revenue/lag_YTD_Rev,2) end as Acc_NDR\nfrom \t\t\tndr_rev\norder by  \t\tClient_Name, Client_ID, business_domain, first_date\n),\nndr1 as\n(\nselect \t\t\tndr.*\n\t\t\t\t, sum(Revenue_USD) over (partition by Client_ID, business_domain, Year) as total_rev\nfrom\t\t\tndr\n),\nndr2 as\n(\nselect \t\t\tndr1.*\n\t\t\t\t, lag(total_rev,12,0) over (partition by Client_ID, business_domain order by First_date) as lag_total_rev\nfrom\t\t\tndr1\n),\nhs as\n(\nselect \t\t\tdistinct\n\t\t\t\todoo_id, hs_team, hs_manager, tcsm_manager\nfrom \t\t\t\"verticadb\".\"analytics\".\"oy_dbt_odoo_hs_team_manager_distinct\" -- analytics.oy_v_odoo_hs_team_manager\nwhere \t\t\ths_team is not null and hs_manager is not null\norder by \t\ths_manager\n),\ntop40 as \n(\nselect \t\t\tNo, \"Odoo ID\" \nfrom \t\t\t\"verticadb\".\"sandbox\".\"oy_sales_plans_gsheet\" -- sandbox.oy_sales_plans_gsheet \nwhere \t\t\tNo<>3 order by No\n), \nfinal as\n(\nselect \t\t\tndr2.*\n\t\t\t\t, case when year(First_date) in(2022,2023) and total_rev>0 and lag_total_rev=0 then business_domain||' New Business'\n\t\t\t\t\t   else null\n\t\t\t\t  end as New_Business\n\t\t\t\t, hs.hs_team, hs.hs_manager, hs.tcsm_manager\n\t\t\t\t, case when top40.No is not NULL then 'Top 40' else NULL end as client_rnk\nfrom\t\t\tndr2\n----------------\nleft join\t\ths\non\t\t\t\tndr2.Client_ID = hs.odoo_id\n----------------\nleft join\t\ttop40\non\t\t\t\tndr2.Client_ID = top40.\"Odoo ID\"\n)\nselect \t\t\t*\nfrom \t\t\tfinal\n--where \t\t\ttotal_rev<>0 or lag_total_rev<>0\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"NDR\", \"target_name\": \"dev\", \"node_id\": \"model.NDR.oy_dbt_ndr_revenue\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_ndr_revenue__dbt_tmp\" include schema privileges as (\n    with ytd_revenue as \n(\nselect \t\t\t*\n\t\t\t\t, sum(Revenue_USD) over (partition by Client_ID, business_domain, year order by First_date \n\t\t\t\t\t\t\t\t\t\t\tROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) \n\t\t\t\tas YTD_Revenue\nfrom \t\t\t\"verticadb\".\"analytics\".\"oy_dbt_revenue_union\"\n),\nlag_rev as\n(\nselect \t\t\t*\n\t\t\t\t, lag(YTD_Revenue,12,0) over (partition by Client_ID, business_domain order by First_date) as lag_YTD_Rev\nfrom \t\t\tytd_revenue\norder by \t\tClient_ID, month, year\n),\nndr_rev as\n(\nselect \t\t\tlag_rev.*\n\t\t\t\t, case when lag_YTD_Rev=0 or lag_YTD_Rev is null then 0 else YTD_Revenue end as NDR_Revenue\nfrom \t\t\tlag_rev\n),\nndr as\n(\nselect\t\t\t*\n\t\t\t\t, case when lag_YTD_Rev=0 then null else round(100*NDR_Revenue/lag_YTD_Rev,2) end as Acc_NDR\nfrom \t\t\tndr_rev\norder by  \t\tClient_Name, Client_ID, business_domain, first_date\n),\nndr1 as\n(\nselect \t\t\tndr.*\n\t\t\t\t, sum(Revenue_USD) over (partition by Client_ID, business_domain, Year) as total_rev\nfrom\t\t\tndr\n),\nndr2 as\n(\nselect \t\t\tndr1.*\n\t\t\t\t, lag(total_rev,12,0) over (partition by Client_ID, business_domain order by First_date) as lag_total_rev\nfrom\t\t\tndr1\n),\nhs as\n(\nselect \t\t\tdistinct\n\t\t\t\todoo_id, hs_team, hs_manager, tcsm_manager\nfrom \t\t\t\"verticadb\".\"analytics\".\"oy_dbt_odoo_hs_team_manager_distinct\" -- analytics.oy_v_odoo_hs_team_manager\nwhere \t\t\ths_team is not null and hs_manager is not null\norder by \t\ths_manager\n),\ntop40 as \n(\nselect \t\t\tNo, \"Odoo ID\" \nfrom \t\t\t\"verticadb\".\"sandbox\".\"oy_sales_plans_gsheet\" -- sandbox.oy_sales_plans_gsheet \nwhere \t\t\tNo<>3 order by No\n), \nfinal as\n(\nselect \t\t\tndr2.*\n\t\t\t\t, case when year(First_date) in(2022,2023) and total_rev>0 and lag_total_rev=0 then business_domain||' New Business'\n\t\t\t\t\t   else null\n\t\t\t\t  end as New_Business\n\t\t\t\t, hs.hs_team, hs.hs_manager, hs.tcsm_manager\n\t\t\t\t, case when top40.No is not NULL then 'Top 40' else NULL end as client_rnk\nfrom\t\t\tndr2\n----------------\nleft join\t\ths\non\t\t\t\tndr2.Client_ID = hs.odoo_id\n----------------\nleft join\t\ttop40\non\t\t\t\tndr2.Client_ID = top40.\"Odoo ID\"\n)\nselect \t\t\t*\nfrom \t\t\tfinal\n--where \t\t\ttotal_rev<>0 or lag_total_rev<>0\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.NDR.oy_dbt_ndr_revenue"}], "elapsed_time": 6.204371929168701, "args": {"write_json": true, "use_colors": true, "printer_width": 80, "version_check": true, "partial_parse": true, "static_parser": true, "profiles_dir": "/Users/oleg/.dbt", "send_anonymous_usage_stats": true, "quiet": false, "no_print": false, "cache_selected_only": false, "which": "run", "rpc_method": "run", "indirect_selection": "eager"}}