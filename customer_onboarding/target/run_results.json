{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v4.json", "dbt_version": "1.4.4", "generated_at": "2023-12-17T17:32:35.103193Z", "invocation_id": "3a514575-d9d4-4a2e-ab35-f0c3194c0988", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-17T17:31:56.580940Z", "completed_at": "2023-12-17T17:31:56.588589Z"}, {"name": "execute", "started_at": "2023-12-17T17:31:56.589292Z", "completed_at": "2023-12-17T17:31:59.014833Z"}], "thread_id": "Thread-1", "execution_time": 2.436537027359009, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_customer_onboarding\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_customer_onboarding__dbt_tmp\" include schema privileges as (\n    \n\nwith l as\n(\nselect \t\tid as fs_ticket_id \n\t\t\t, company_id as fs_company_id\n\t\t\t, stats__closed_at \n\t\t\t, datediff(day, created_at, stats__closed_at) as days_to_close\n\t\t\t, created_at , stats__first_responded_at , stats__agent_responded_at\n\t\t\t, datediff(day, created_at, stats__first_responded_at) as days_first_responce\n\t\t\t, datediff(day, created_at, stats__agent_responded_at) as days_agent_responce\n\t\t\t--, due_by , fr_due_by , status\n\t\t\t, group_id , requester_id , requester_name \n\t\t\t, responder_id \n\t\t\t--, \"source\" \n\t\t\t--, custom_fields__cf_req_category \n\t\t\t, custom_fields__cf_req_template \n\t\t\t, custom_fields__cf_service781181 \n\t\t\t, custom_fields__cf_company_name\n\t\t\t, requester_email \n\t\t\t--, subject, description_text \nfrom \t\t\"verticadb\".\"raw\".\"freshdesk__tickets\"\nwhere \t\ttype = 'Onboarding Request'\n\t\t\t--and company_id is not null\n)\nselect \t\tcompanies.custom__fields_odoo_id as fs_odoo_id\n\t\t\t, companies.name as fs_company_name\n\t\t\t, companies.custom__fields_hubspot_company_name as hubspot_company_name\n\t\t\t, companies.custom__fields_hubspot_id as hubspot_id\n\t\t\t, companies.custom__fields_uc_id as fs_uc_id\n\t\t\t, l.*\n\t\t\t, companies.industry as industry_name\n\t\t\t, agents.contact_name\nfrom\t\tl\nleft join\t\"verticadb\".\"raw\".\"freshdesk__agents\" as agents\non \t\t\tl.responder_id = agents.id\n------------\nleft join\t\"verticadb\".\"raw\".\"freshdesk__groups\" as groups\non \t\t\tl.group_id = groups.id\n------------\nleft join\t\"verticadb\".\"raw\".\"freshdesk__companies\" as companies\non \t\t\tl.fs_company_id = companies.id\n------------\nleft join\t\"verticadb\".\"analytics\".\"lm_v_master_account_mapping\" as lm\non \t\t\tcompanies.custom__fields_uc_id::VARCHAR = lm.UC_Account_ID_L0\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_customer_onboarding\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_customer_onboarding__dbt_tmp\" include schema privileges as (\n    \n\nwith l as\n(\nselect \t\tid as fs_ticket_id \n\t\t\t, company_id as fs_company_id\n\t\t\t, stats__closed_at \n\t\t\t, datediff(day, created_at, stats__closed_at) as days_to_close\n\t\t\t, created_at , stats__first_responded_at , stats__agent_responded_at\n\t\t\t, datediff(day, created_at, stats__first_responded_at) as days_first_responce\n\t\t\t, datediff(day, created_at, stats__agent_responded_at) as days_agent_responce\n\t\t\t--, due_by , fr_due_by , status\n\t\t\t, group_id , requester_id , requester_name \n\t\t\t, responder_id \n\t\t\t--, \"source\" \n\t\t\t--, custom_fields__cf_req_category \n\t\t\t, custom_fields__cf_req_template \n\t\t\t, custom_fields__cf_service781181 \n\t\t\t, custom_fields__cf_company_name\n\t\t\t, requester_email \n\t\t\t--, subject, description_text \nfrom \t\t\"verticadb\".\"raw\".\"freshdesk__tickets\"\nwhere \t\ttype = 'Onboarding Request'\n\t\t\t--and company_id is not null\n)\nselect \t\tcompanies.custom__fields_odoo_id as fs_odoo_id\n\t\t\t, companies.name as fs_company_name\n\t\t\t, companies.custom__fields_hubspot_company_name as hubspot_company_name\n\t\t\t, companies.custom__fields_hubspot_id as hubspot_id\n\t\t\t, companies.custom__fields_uc_id as fs_uc_id\n\t\t\t, l.*\n\t\t\t, companies.industry as industry_name\n\t\t\t, agents.contact_name\nfrom\t\tl\nleft join\t\"verticadb\".\"raw\".\"freshdesk__agents\" as agents\non \t\t\tl.responder_id = agents.id\n------------\nleft join\t\"verticadb\".\"raw\".\"freshdesk__groups\" as groups\non \t\t\tl.group_id = groups.id\n------------\nleft join\t\"verticadb\".\"raw\".\"freshdesk__companies\" as companies\non \t\t\tl.fs_company_id = companies.id\n------------\nleft join\t\"verticadb\".\"analytics\".\"lm_v_master_account_mapping\" as lm\non \t\t\tcompanies.custom__fields_uc_id::VARCHAR = lm.UC_Account_ID_L0\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.customer_onboarding.oy_dbt_customer_onboarding"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-17T17:31:59.022434Z", "completed_at": "2023-12-17T17:31:59.028349Z"}, {"name": "execute", "started_at": "2023-12-17T17:31:59.029456Z", "completed_at": "2023-12-17T17:32:01.606390Z"}], "thread_id": "Thread-1", "execution_time": 2.5863699913024902, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_thresholds\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_thresholds__dbt_tmp\" include schema privileges as (\n    \nwith base as\n(\nselect \t\tdate_nk\n\t\t\t, split_part(event_type, '.',2) as channel\n\t\t\t, Master_Account_ID \n\t\t\t, Master_Account_Name \n\t\t\t, units\n\t\t\t, sum(units) over (partition by Master_Account_ID, event_type order by date_nk) as total_units\n\t\t\t, case  when event_type = 'default.sms' then 50000  --SMS (KSA)\n\t\t\t\t\twhen event_type = 'default.flowstudio' then 500000 --Executions\n\t\t\t\t\twhen event_type = 'default.chatbot' then 50000 --chatbot sessions\n\t\t\t\t\twhen event_type = 'default.voice' then 10000 --Minutes\n\t\t\t\t\twhen event_type = 'default.authenticate' then 90000 --Authentications\n\t\t\t\t\tend as threshold\n\t\t\t, case \twhen event_type = 'default.sms' \n\t\t\t\t\tthen sum(units) over (partition by Master_Account_ID, event_type order by date_nk)\n\t\t\t\t\telse null\n\t\t\t  \t\tend as sms_total_units\n\t\t\t, case \twhen event_type = 'default.flowstudio' \n\t\t\t\t\tthen sum(units) over (partition by Master_Account_ID, event_type order by date_nk)\n\t\t\t\t\telse null\n\t\t\t  \t\tend as flowstudio_total_units\n\t\t\t, case \twhen event_type = 'default.chatbot' \n\t\t\t\t\tthen sum(units) over (partition by Master_Account_ID, event_type order by date_nk)\n\t\t\t\t\telse null\n\t\t\t  \t\tend as chatbot_total_units\n\t\t\t, case \twhen event_type = 'default.voice' \n\t\t\t\t\tthen sum(units) over (partition by Master_Account_ID, event_type order by date_nk)\n\t\t\t\t\telse null\n\t\t\t  \t\tend as voice_total_units\n\t\t\t, case \twhen event_type = 'default.authenticate' \n\t\t\t\t\tthen sum(units) over (partition by Master_Account_ID, event_type order by date_nk)\n\t\t\t\t\telse null\n\t\t\t \t\tend as authenticate_total_units\n\t\t\t, charging_id\n\t\t\t, pd_user_account_name \nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_consumption_agg\"\nwhere \t\t1=1\n\t\t\tand event_type is not null\n            and pd_user_account_name not in ('Active monitoring', 'Unifonic Employees')\n\t\t\tand Master_Account_Name not in ('Unifonic Employees')\n            and Master_Account_ID is not null\n)\nselect \t\t*\n\t\t\t, max(total_units) over (partition by Master_Account_ID, channel) as max_units_now\nfrom \t\tbase\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_thresholds\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_thresholds__dbt_tmp\" include schema privileges as (\n    \nwith base as\n(\nselect \t\tdate_nk\n\t\t\t, split_part(event_type, '.',2) as channel\n\t\t\t, Master_Account_ID \n\t\t\t, Master_Account_Name \n\t\t\t, units\n\t\t\t, sum(units) over (partition by Master_Account_ID, event_type order by date_nk) as total_units\n\t\t\t, case  when event_type = 'default.sms' then 50000  --SMS (KSA)\n\t\t\t\t\twhen event_type = 'default.flowstudio' then 500000 --Executions\n\t\t\t\t\twhen event_type = 'default.chatbot' then 50000 --chatbot sessions\n\t\t\t\t\twhen event_type = 'default.voice' then 10000 --Minutes\n\t\t\t\t\twhen event_type = 'default.authenticate' then 90000 --Authentications\n\t\t\t\t\tend as threshold\n\t\t\t, case \twhen event_type = 'default.sms' \n\t\t\t\t\tthen sum(units) over (partition by Master_Account_ID, event_type order by date_nk)\n\t\t\t\t\telse null\n\t\t\t  \t\tend as sms_total_units\n\t\t\t, case \twhen event_type = 'default.flowstudio' \n\t\t\t\t\tthen sum(units) over (partition by Master_Account_ID, event_type order by date_nk)\n\t\t\t\t\telse null\n\t\t\t  \t\tend as flowstudio_total_units\n\t\t\t, case \twhen event_type = 'default.chatbot' \n\t\t\t\t\tthen sum(units) over (partition by Master_Account_ID, event_type order by date_nk)\n\t\t\t\t\telse null\n\t\t\t  \t\tend as chatbot_total_units\n\t\t\t, case \twhen event_type = 'default.voice' \n\t\t\t\t\tthen sum(units) over (partition by Master_Account_ID, event_type order by date_nk)\n\t\t\t\t\telse null\n\t\t\t  \t\tend as voice_total_units\n\t\t\t, case \twhen event_type = 'default.authenticate' \n\t\t\t\t\tthen sum(units) over (partition by Master_Account_ID, event_type order by date_nk)\n\t\t\t\t\telse null\n\t\t\t \t\tend as authenticate_total_units\n\t\t\t, charging_id\n\t\t\t, pd_user_account_name \nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_consumption_agg\"\nwhere \t\t1=1\n\t\t\tand event_type is not null\n            and pd_user_account_name not in ('Active monitoring', 'Unifonic Employees')\n\t\t\tand Master_Account_Name not in ('Unifonic Employees')\n            and Master_Account_ID is not null\n)\nselect \t\t*\n\t\t\t, max(total_units) over (partition by Master_Account_ID, channel) as max_units_now\nfrom \t\tbase\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.customer_onboarding.oy_dbt_thresholds"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-17T17:32:01.612208Z", "completed_at": "2023-12-17T17:32:01.615801Z"}, {"name": "execute", "started_at": "2023-12-17T17:32:01.616410Z", "completed_at": "2023-12-17T17:32:03.838025Z"}], "thread_id": "Thread-1", "execution_time": 2.2281408309936523, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_onboarding_tickets_closing_summary\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_onboarding_tickets_closing_summary__dbt_tmp\" include schema privileges as (\n    with base as\n(\nselect \t\tdistinct fs_company_id, stats__closed_at\nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_customer_onboarding\"\n)\n, stg1 as\n(\nselect \t\tROW_NUMBER() over (partition by fs_company_id order by stats__closed_at) as rn \n\t\t\t, count(fs_company_id) over (partition by fs_company_id) as cnt\n\t\t\t, *\nfrom \t\tbase\n)\n, stg2 as\n(\nselect \t\t*\n\t\t\t, case \twhen cnt = 1 and stats__closed_at is null then 'no'\n\t\t\t\t\telse 'yes'\n\t\t\t   end as at_least_one_ticket_closed\nfrom \t\tstg1\n--order by \tfs_company_id , rn\n)\nselect \t\tcnt as count_onboarding_tickets\n\t\t\t, fs_company_id \n\t\t\t, stats__closed_at::DATE as first_closing_date\n\t\t\t, at_least_one_ticket_closed\nfrom \t\tstg2\nwhere \t\trn = 1\n--order by \tfs_company_id , rn\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_onboarding_tickets_closing_summary\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_onboarding_tickets_closing_summary__dbt_tmp\" include schema privileges as (\n    with base as\n(\nselect \t\tdistinct fs_company_id, stats__closed_at\nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_customer_onboarding\"\n)\n, stg1 as\n(\nselect \t\tROW_NUMBER() over (partition by fs_company_id order by stats__closed_at) as rn \n\t\t\t, count(fs_company_id) over (partition by fs_company_id) as cnt\n\t\t\t, *\nfrom \t\tbase\n)\n, stg2 as\n(\nselect \t\t*\n\t\t\t, case \twhen cnt = 1 and stats__closed_at is null then 'no'\n\t\t\t\t\telse 'yes'\n\t\t\t   end as at_least_one_ticket_closed\nfrom \t\tstg1\n--order by \tfs_company_id , rn\n)\nselect \t\tcnt as count_onboarding_tickets\n\t\t\t, fs_company_id \n\t\t\t, stats__closed_at::DATE as first_closing_date\n\t\t\t, at_least_one_ticket_closed\nfrom \t\tstg2\nwhere \t\trn = 1\n--order by \tfs_company_id , rn\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.customer_onboarding.oy_dbt_onboarding_tickets_closing_summary"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-17T17:32:03.856136Z", "completed_at": "2023-12-17T17:32:03.860060Z"}, {"name": "execute", "started_at": "2023-12-17T17:32:03.860687Z", "completed_at": "2023-12-17T17:32:08.674734Z"}], "thread_id": "Thread-1", "execution_time": 4.820893049240112, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_customer_onboarding_dedupped\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_customer_onboarding_dedupped__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n    \n\nwith base as\n(\nselect \t\t\t--ROW_NUMBER() over (partition by fs_company_id order by stats__closed_at) as rn \n\t\t\t\tROW_NUMBER() over (partition by fs_company_id, custom_fields__cf_service781181 order by created_at) as rn \n\t\t\t\t, *\nfrom \t\t\t\"verticadb\".\"analytics\".\"oy_dbt_customer_onboarding\"\n)\n, dd as\n(\nselect \t\t\t* \nfrom \t\t\tbase\nwhere \t\t\trn = 1\n)\nselect \t\t\tcc.count_onboarding_tickets\n\t\t\t\t, cc.first_closing_date\n\t\t\t\t, cc.at_least_one_ticket_closed\n\t\t\t\t, dd.*\n\t\t\t\t, case \twhen dd.custom_fields__cf_service781181='SMS' then 'sms'\n\t\t\t\t\t\twhen dd.custom_fields__cf_service781181='WAB' then 'chatbot'\n\t\t\t\t\t\twhen dd.custom_fields__cf_service781181='Voice' then 'voice'\n\t\t\t\t\t\twhen dd.custom_fields__cf_service781181='flowstudio' then 'flowstudio'\n\t\t\t\t\t\telse dd.custom_fields__cf_service781181\n\t\t\t\t\t\tend as channel\nfrom \t\t\tdd\nleft join \t\t\"verticadb\".\"analytics\".\"oy_dbt_onboarding_tickets_closing_summary\" as cc\non \t\t\t\tdd.fs_company_id = cc.fs_company_id\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_customer_onboarding_dedupped\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_customer_onboarding_dedupped__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n    \n\nwith base as\n(\nselect \t\t\t--ROW_NUMBER() over (partition by fs_company_id order by stats__closed_at) as rn \n\t\t\t\tROW_NUMBER() over (partition by fs_company_id, custom_fields__cf_service781181 order by created_at) as rn \n\t\t\t\t, *\nfrom \t\t\t\"verticadb\".\"analytics\".\"oy_dbt_customer_onboarding\"\n)\n, dd as\n(\nselect \t\t\t* \nfrom \t\t\tbase\nwhere \t\t\trn = 1\n)\nselect \t\t\tcc.count_onboarding_tickets\n\t\t\t\t, cc.first_closing_date\n\t\t\t\t, cc.at_least_one_ticket_closed\n\t\t\t\t, dd.*\n\t\t\t\t, case \twhen dd.custom_fields__cf_service781181='SMS' then 'sms'\n\t\t\t\t\t\twhen dd.custom_fields__cf_service781181='WAB' then 'chatbot'\n\t\t\t\t\t\twhen dd.custom_fields__cf_service781181='Voice' then 'voice'\n\t\t\t\t\t\twhen dd.custom_fields__cf_service781181='flowstudio' then 'flowstudio'\n\t\t\t\t\t\telse dd.custom_fields__cf_service781181\n\t\t\t\t\t\tend as channel\nfrom \t\t\tdd\nleft join \t\t\"verticadb\".\"analytics\".\"oy_dbt_onboarding_tickets_closing_summary\" as cc\non \t\t\t\tdd.fs_company_id = cc.fs_company_id\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.customer_onboarding.oy_dbt_customer_onboarding_dedupped"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-17T17:32:08.680686Z", "completed_at": "2023-12-17T17:32:08.698753Z"}, {"name": "execute", "started_at": "2023-12-17T17:32:08.699402Z", "completed_at": "2023-12-17T17:32:10.864094Z"}], "thread_id": "Thread-1", "execution_time": 2.18586802482605, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_consumption_start_date\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_consumption_start_date__dbt_tmp\" include schema privileges as (\n    with  __dbt__cte__oy_dbt_threshold_reached as (\n\n\nwith num as\n(\nselect \t\tROW_NUMBER() over (partition by Master_Account_ID, channel order by date_nk) as rn\n\t\t\t, *\nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_thresholds\"\nwhere \t\t1=1\n\t\t\tand\t\t(\t\n\t\t\t\t\tsms_total_units >= threshold --SMS (KSA)\n\t\t\t\t\tor flowstudio_total_units >= threshold --Executions\n\t\t\t\t\tor chatbot_total_units >= threshold --chatbot sessions\n\t\t\t\t\tor voice_total_units >= threshold --Minutes\n\t\t\t\t\tor authenticate_total_units >= threshold --Authentications\n\t\t\t\t   \t)\n)\nselect \t\t* \nfrom \t\tnum \nwhere \t\trn = 1\norder by \tMaster_Account_Name , channel\n),  __dbt__cte__oy_dbt_threshold_not_reached as (\n\n\nwith num as\n(\nselect \t\tROW_NUMBER() over (partition by Master_Account_ID, channel order by date_nk desc) as rn\n\t\t\t, *\nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_thresholds\"\nwhere \t\t1=1\n\t\t\tand max_units_now < threshold\n)\nselect \t\t* \nfrom \t\tnum \nwhere \t\trn = 1\norder by \tMaster_Account_Name , channel\n),base as\n(\nselect \t\t*, 100 as pct_to_threshold \nfrom \t\t__dbt__cte__oy_dbt_threshold_reached\nunion\nselect \t\t*, round(100*total_units/threshold,1) as pct_to_threshold \nfrom \t\t__dbt__cte__oy_dbt_threshold_not_reached\n)\nselect \t\tcount(Master_Account_ID) over (partition by Master_Account_ID) as channels_count\n\t\t\t, *\nfrom \t\tbase\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_consumption_start_date\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_consumption_start_date__dbt_tmp\" include schema privileges as (\n    with  __dbt__cte__oy_dbt_threshold_reached as (\n\n\nwith num as\n(\nselect \t\tROW_NUMBER() over (partition by Master_Account_ID, channel order by date_nk) as rn\n\t\t\t, *\nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_thresholds\"\nwhere \t\t1=1\n\t\t\tand\t\t(\t\n\t\t\t\t\tsms_total_units >= threshold --SMS (KSA)\n\t\t\t\t\tor flowstudio_total_units >= threshold --Executions\n\t\t\t\t\tor chatbot_total_units >= threshold --chatbot sessions\n\t\t\t\t\tor voice_total_units >= threshold --Minutes\n\t\t\t\t\tor authenticate_total_units >= threshold --Authentications\n\t\t\t\t   \t)\n)\nselect \t\t* \nfrom \t\tnum \nwhere \t\trn = 1\norder by \tMaster_Account_Name , channel\n),  __dbt__cte__oy_dbt_threshold_not_reached as (\n\n\nwith num as\n(\nselect \t\tROW_NUMBER() over (partition by Master_Account_ID, channel order by date_nk desc) as rn\n\t\t\t, *\nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_thresholds\"\nwhere \t\t1=1\n\t\t\tand max_units_now < threshold\n)\nselect \t\t* \nfrom \t\tnum \nwhere \t\trn = 1\norder by \tMaster_Account_Name , channel\n),base as\n(\nselect \t\t*, 100 as pct_to_threshold \nfrom \t\t__dbt__cte__oy_dbt_threshold_reached\nunion\nselect \t\t*, round(100*total_units/threshold,1) as pct_to_threshold \nfrom \t\t__dbt__cte__oy_dbt_threshold_not_reached\n)\nselect \t\tcount(Master_Account_ID) over (partition by Master_Account_ID) as channels_count\n\t\t\t, *\nfrom \t\tbase\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.customer_onboarding.oy_dbt_consumption_start_date"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-17T17:32:10.870079Z", "completed_at": "2023-12-17T17:32:10.874568Z"}, {"name": "execute", "started_at": "2023-12-17T17:32:10.875218Z", "completed_at": "2023-12-17T17:32:28.968583Z"}], "thread_id": "Thread-1", "execution_time": 18.10112166404724, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_consumption_start_date_concize\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_consumption_start_date_concize__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n    \n\nselect      Master_Account_ID\n            , Master_Account_Name\n            , channels_count\n            , channel\n            --, date_nk -- if pct_to_threshold = 1 then date_nk is the date when a threshold got hit else it's a last consumption date\n            , case when pct_to_threshold=100 then date_nk else null end as threshold_hit_at\n            , case when pct_to_threshold<100 then date_nk else null end as last_consumption_at\n            , pct_to_threshold\n            , total_units\n            , threshold\nfrom        \"verticadb\".\"analytics\".\"oy_dbt_consumption_start_date\"\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_consumption_start_date_concize\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_consumption_start_date_concize__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n    \n\nselect      Master_Account_ID\n            , Master_Account_Name\n            , channels_count\n            , channel\n            --, date_nk -- if pct_to_threshold = 1 then date_nk is the date when a threshold got hit else it's a last consumption date\n            , case when pct_to_threshold=100 then date_nk else null end as threshold_hit_at\n            , case when pct_to_threshold<100 then date_nk else null end as last_consumption_at\n            , pct_to_threshold\n            , total_units\n            , threshold\nfrom        \"verticadb\".\"analytics\".\"oy_dbt_consumption_start_date\"\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.customer_onboarding.oy_dbt_consumption_start_date_concize"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-17T17:32:28.974668Z", "completed_at": "2023-12-17T17:32:28.978852Z"}, {"name": "execute", "started_at": "2023-12-17T17:32:28.979498Z", "completed_at": "2023-12-17T17:32:31.279925Z"}], "thread_id": "Thread-1", "execution_time": 2.30763578414917, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_onboarding_to_consumption_time\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_onboarding_to_consumption_time__dbt_tmp\" include schema privileges as (\n    select              c.*\n                    , d.fs_ticket_id as fs_first_ticket_id\n                    , d.count_onboarding_tickets\n                    , d.custom_fields__cf_service781181\n                    , d.created_at::DATE\n                    , d.stats__closed_at::DATE as closed_at\n                    , d.at_least_one_ticket_closed\n                    , d.first_closing_date\n                    , datediff(day, d.created_at, c.threshold_hit_at) as days_to_threshold_hit\n                    , datediff(day, d.created_at, c.last_consumption_at) as days_to_last_consumption\nfrom                \"verticadb\".\"analytics\".\"oy_dbt_consumption_start_date_concize\" as c\nleft join           \"verticadb\".\"analytics\".\"oy_dbt_customer_onboarding_dedupped\" as d\non                  c.Master_Account_ID = d.fs_odoo_id\n                    and c.channel = d.channel\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_onboarding_to_consumption_time\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_onboarding_to_consumption_time__dbt_tmp\" include schema privileges as (\n    select              c.*\n                    , d.fs_ticket_id as fs_first_ticket_id\n                    , d.count_onboarding_tickets\n                    , d.custom_fields__cf_service781181\n                    , d.created_at::DATE\n                    , d.stats__closed_at::DATE as closed_at\n                    , d.at_least_one_ticket_closed\n                    , d.first_closing_date\n                    , datediff(day, d.created_at, c.threshold_hit_at) as days_to_threshold_hit\n                    , datediff(day, d.created_at, c.last_consumption_at) as days_to_last_consumption\nfrom                \"verticadb\".\"analytics\".\"oy_dbt_consumption_start_date_concize\" as c\nleft join           \"verticadb\".\"analytics\".\"oy_dbt_customer_onboarding_dedupped\" as d\non                  c.Master_Account_ID = d.fs_odoo_id\n                    and c.channel = d.channel\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.customer_onboarding.oy_dbt_onboarding_to_consumption_time"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-17T17:32:31.285101Z", "completed_at": "2023-12-17T17:32:31.290391Z"}, {"name": "execute", "started_at": "2023-12-17T17:32:31.291010Z", "completed_at": "2023-12-17T17:32:33.713641Z"}], "thread_id": "Thread-1", "execution_time": 2.4308929443359375, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_onboarding_to_consumption_time_KPI\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_onboarding_to_consumption_time_KPI__dbt_tmp\" include schema privileges as (\n    select              *\nfrom                \"verticadb\".\"analytics\".\"oy_dbt_onboarding_to_consumption_time\" as c\nwhere               days_to_threshold_hit>0 \n                    or days_to_last_consumption>0\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"customer_onboarding\", \"target_name\": \"dev\", \"node_id\": \"model.customer_onboarding.oy_dbt_onboarding_to_consumption_time_KPI\"} */\n\n  create view \"verticadb\".\"analytics\".\"oy_dbt_onboarding_to_consumption_time_KPI__dbt_tmp\" include schema privileges as (\n    select              *\nfrom                \"verticadb\".\"analytics\".\"oy_dbt_onboarding_to_consumption_time\" as c\nwhere               days_to_threshold_hit>0 \n                    or days_to_last_consumption>0\n  );, Message: CommandComplete: command_tag = \"CREATE VIEW\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.customer_onboarding.oy_dbt_onboarding_to_consumption_time_KPI"}], "elapsed_time": 42.825955867767334, "args": {"write_json": true, "use_colors": true, "printer_width": 80, "version_check": true, "partial_parse": true, "static_parser": true, "profiles_dir": "/Users/oleg/.dbt", "send_anonymous_usage_stats": true, "quiet": false, "no_print": false, "cache_selected_only": false, "which": "run", "rpc_method": "run", "indirect_selection": "eager"}}