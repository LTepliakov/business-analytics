{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v4.json", "dbt_version": "1.4.4", "generated_at": "2023-09-13T09:32:50.517902Z", "invocation_id": "b7307c73-fb2b-4a9b-a904-7328ec92d5f9", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-09-13T09:29:09.992228Z", "completed_at": "2023-09-13T09:29:09.997646Z"}, {"name": "execute", "started_at": "2023-09-13T09:29:09.998715Z", "completed_at": "2023-09-13T09:29:18.819064Z"}], "thread_id": "Thread-1", "execution_time": 8.829078912734985, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_dbt_consumption\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_consumption__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n     \n\nselect \t\tLAST_DAY(ADD_MONTHS(hour_nk, -1)) + 1 as rep_month\n            , date(ca.hour_nk) as date_nk\n            , ca.account_id as charging_id\n            , da.pd_user_id\n            , da.pd_user_account_name\n            , ca.bundle_name\n            , da.pd_user_country\n            , case \twhen split_part(trim(ca.bundle_name), '_', 2)='mb' then 'mb' else 'package' end as bundle_type\n            , case \twhen ca.bundle_name in ('10002202_UAE All Operators', '10002202_mb') then '9598' -- Tamara\n                    when ca.bundle_name in ('20000600_UAE All Operators') then '10168' -- Tabby\n                    when ca.account_id = 114 then '3436' -- Nahdi Medical Company Guest Care, missing erp_id in standard.dim_accounts. When Thomas upload Batch 5 then delete this line of code\n                    else null \n                end as manual_odoo_id\n            , case \twhen ca.bundle_name in ('10002202_UAE All Operators', '10002202_mb') then 'Tamara FZE' -- Tamara\n                    when ca.bundle_name in ('20000600_UAE All Operators') then 'Tabby FZ-LLC' -- Tabby\n                    else null \n                end as manual_odoo_name\n            , sum(units) as units, sum(charge) as charge, sum(revenue) as cdr_revenue\n            , case \twhen sum(units)=0 then null\n                    when split_part(trim(ca.bundle_name), '_', 2)='package' then ROUND(sum(revenue)/sum(charge),8)\n                    else ROUND(sum(revenue)/sum(units),8) \n                end as cdr_selling_rate\nfrom \t\t\"verticadb\".\"aggregate\".\"fact_sms_consumption_aggregate\" as ca --aggregate.fact_sms_consumption_aggregate \nleft join \t\"verticadb\".\"standard\".\"dim_accounts\" as da --standard.dim_accounts as da\non \t\t\tca.account_id = da.charging_id\nwhere \t\tca.event_type = 'default.sms'\n            and date(hour_nk) >= '2023-01-01'\n            --and ca.account_id = 114\ngroup by\t1,2,3,4,5,6,7,8,9,10\norder by \tdate(ca.hour_nk) desc\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_dbt_consumption\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_consumption__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n     \n\nselect \t\tLAST_DAY(ADD_MONTHS(hour_nk, -1)) + 1 as rep_month\n            , date(ca.hour_nk) as date_nk\n            , ca.account_id as charging_id\n            , da.pd_user_id\n            , da.pd_user_account_name\n            , ca.bundle_name\n            , da.pd_user_country\n            , case \twhen split_part(trim(ca.bundle_name), '_', 2)='mb' then 'mb' else 'package' end as bundle_type\n            , case \twhen ca.bundle_name in ('10002202_UAE All Operators', '10002202_mb') then '9598' -- Tamara\n                    when ca.bundle_name in ('20000600_UAE All Operators') then '10168' -- Tabby\n                    when ca.account_id = 114 then '3436' -- Nahdi Medical Company Guest Care, missing erp_id in standard.dim_accounts. When Thomas upload Batch 5 then delete this line of code\n                    else null \n                end as manual_odoo_id\n            , case \twhen ca.bundle_name in ('10002202_UAE All Operators', '10002202_mb') then 'Tamara FZE' -- Tamara\n                    when ca.bundle_name in ('20000600_UAE All Operators') then 'Tabby FZ-LLC' -- Tabby\n                    else null \n                end as manual_odoo_name\n            , sum(units) as units, sum(charge) as charge, sum(revenue) as cdr_revenue\n            , case \twhen sum(units)=0 then null\n                    when split_part(trim(ca.bundle_name), '_', 2)='package' then ROUND(sum(revenue)/sum(charge),8)\n                    else ROUND(sum(revenue)/sum(units),8) \n                end as cdr_selling_rate\nfrom \t\t\"verticadb\".\"aggregate\".\"fact_sms_consumption_aggregate\" as ca --aggregate.fact_sms_consumption_aggregate \nleft join \t\"verticadb\".\"standard\".\"dim_accounts\" as da --standard.dim_accounts as da\non \t\t\tca.account_id = da.charging_id\nwhere \t\tca.event_type = 'default.sms'\n            and date(hour_nk) >= '2023-01-01'\n            --and ca.account_id = 114\ngroup by\t1,2,3,4,5,6,7,8,9,10\norder by \tdate(ca.hour_nk) desc\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.live_revenue.oy_dbt_consumption"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-09-13T09:29:18.824023Z", "completed_at": "2023-09-13T09:29:18.832013Z"}, {"name": "execute", "started_at": "2023-09-13T09:29:18.832744Z", "completed_at": "2023-09-13T09:30:41.102386Z"}], "thread_id": "Thread-1", "execution_time": 82.28075098991394, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_dbt_consumption_agg\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_consumption_agg__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n     \n\nselect \t\tLAST_DAY(ADD_MONTHS(hour_nk, -1)) + 1 as rep_month\n            , event_type\n            , date(ca.hour_nk) as date_nk\n            , ca.account_id as charging_id\n            , da.pd_user_id\n            , da.pd_user_account_name\n            , ca.bundle_name\n            , da.pd_user_country\n            , case \twhen split_part(trim(ca.bundle_name), '_', 2)='mb' then 'mb' else 'package' end as bundle_type\n            , case \twhen ca.bundle_name in ('10002202_UAE All Operators', '10002202_mb') then '9598' -- Tamara\n                    when ca.bundle_name in ('20000600_UAE All Operators') then '10168' -- Tabby\n                    when ca.account_id = 114 then '3436' -- Nahdi Medical Company Guest Care, missing erp_id in standard.dim_accounts. When Thomas upload Batch 5 then delete this line of code\n                    else null \n                end as manual_odoo_id\n            , case \twhen ca.bundle_name in ('10002202_UAE All Operators', '10002202_mb') then 'Tamara FZE' -- Tamara\n                    when ca.bundle_name in ('20000600_UAE All Operators') then 'Tabby FZ-LLC' -- Tabby\n                    else null \n                end as manual_odoo_name\n            , ca.tariff\n            , ca.current_selling_rate_value\n            , lmm.Master_Account_ID\n            , lmm.Master_Account_Name\n            , lmm.Master_Account_Origin\n            , tm.hs_team\n            , tm.hs_manager\n            , tm.tcsm_manager\n            , case when sa.Account_Type is null then 'Client Account' else sa.Account_Type end as Account_Type\n            , case when top40.\"Customer Name\" is null then null else 'Top 40' end as client_rank\n            , sum(units) as units, sum(charge) as charge\nfrom \t\t\"verticadb\".\"aggregate\".\"fact_sms_consumption_aggregate\" as ca --aggregate.fact_sms_consumption_aggregate \nleft join \t\"verticadb\".\"standard\".\"dim_accounts\" as da --standard.dim_accounts as da\non \t\t\tca.account_id = da.charging_id\n-------\nleft join \t(\t\n\t\t\t\tselect \t\tCharging_ID_L0\n\t\t\t\t\t\t\t, COALESCE(manual_odoo_id, Master_Account_ID) as Master_Account_ID\n\t\t\t\t\t\t\t, COALESCE(manual_odoo_name, Master_Account_Name) as Master_Account_Name\n\t\t\t\t\t\t\t, Master_Account_Origin\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"lm_v_master_account_mapping\" --analytics.lm_v_master_account_mapping\n\t\t\t) as lmm\non \t\t\tca.account_id = lmm.Charging_ID_L0\n-------\nleft join \t(\n\t\t\t\tselect \t\tdistinct\n\t\t\t\t\t\t\todoo_id, odoo_name, email, hs_team, hs_manager, hs_email, tcsm_manager\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_v_odoo_hs_team_manager\" --analytics.oy_v_odoo_hs_team_manager\n\t\t\t\twhere \t\ths_team is not null and hs_manager is not null\n\t\t\t\torder by \ths_manager\n\t\t\t) as tm \non \t\t\ttm.odoo_id = lmm.Master_Account_ID\n-------\nleft join\t\"verticadb\".\"analytics\".\"oy_dbt_special_accounts\" as sa --analytics.oy_special_accounts\non \t\t\tca.account_id = sa.charging_id\n-------\nleft join \t(\n\t\t\t\tselect \t\t* \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_sales_plans_gsheet\" --sandbox.oy_sales_plans_gsheet \n\t\t\t\twhere\t\tNo<>3 order by No\n\t\t\t) as top40\non \t\t\tlmm.Master_Account_ID = top40.\"Odoo ID\"\n-------\nwhere\t    lmm.Master_Account_Name <> 'migration traffic'\n            and ca.event_type is not NULL\ngroup by\t1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21\norder by \tdate(ca.hour_nk) desc\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_dbt_consumption_agg\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_consumption_agg__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n     \n\nselect \t\tLAST_DAY(ADD_MONTHS(hour_nk, -1)) + 1 as rep_month\n            , event_type\n            , date(ca.hour_nk) as date_nk\n            , ca.account_id as charging_id\n            , da.pd_user_id\n            , da.pd_user_account_name\n            , ca.bundle_name\n            , da.pd_user_country\n            , case \twhen split_part(trim(ca.bundle_name), '_', 2)='mb' then 'mb' else 'package' end as bundle_type\n            , case \twhen ca.bundle_name in ('10002202_UAE All Operators', '10002202_mb') then '9598' -- Tamara\n                    when ca.bundle_name in ('20000600_UAE All Operators') then '10168' -- Tabby\n                    when ca.account_id = 114 then '3436' -- Nahdi Medical Company Guest Care, missing erp_id in standard.dim_accounts. When Thomas upload Batch 5 then delete this line of code\n                    else null \n                end as manual_odoo_id\n            , case \twhen ca.bundle_name in ('10002202_UAE All Operators', '10002202_mb') then 'Tamara FZE' -- Tamara\n                    when ca.bundle_name in ('20000600_UAE All Operators') then 'Tabby FZ-LLC' -- Tabby\n                    else null \n                end as manual_odoo_name\n            , ca.tariff\n            , ca.current_selling_rate_value\n            , lmm.Master_Account_ID\n            , lmm.Master_Account_Name\n            , lmm.Master_Account_Origin\n            , tm.hs_team\n            , tm.hs_manager\n            , tm.tcsm_manager\n            , case when sa.Account_Type is null then 'Client Account' else sa.Account_Type end as Account_Type\n            , case when top40.\"Customer Name\" is null then null else 'Top 40' end as client_rank\n            , sum(units) as units, sum(charge) as charge\nfrom \t\t\"verticadb\".\"aggregate\".\"fact_sms_consumption_aggregate\" as ca --aggregate.fact_sms_consumption_aggregate \nleft join \t\"verticadb\".\"standard\".\"dim_accounts\" as da --standard.dim_accounts as da\non \t\t\tca.account_id = da.charging_id\n-------\nleft join \t(\t\n\t\t\t\tselect \t\tCharging_ID_L0\n\t\t\t\t\t\t\t, COALESCE(manual_odoo_id, Master_Account_ID) as Master_Account_ID\n\t\t\t\t\t\t\t, COALESCE(manual_odoo_name, Master_Account_Name) as Master_Account_Name\n\t\t\t\t\t\t\t, Master_Account_Origin\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"lm_v_master_account_mapping\" --analytics.lm_v_master_account_mapping\n\t\t\t) as lmm\non \t\t\tca.account_id = lmm.Charging_ID_L0\n-------\nleft join \t(\n\t\t\t\tselect \t\tdistinct\n\t\t\t\t\t\t\todoo_id, odoo_name, email, hs_team, hs_manager, hs_email, tcsm_manager\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_v_odoo_hs_team_manager\" --analytics.oy_v_odoo_hs_team_manager\n\t\t\t\twhere \t\ths_team is not null and hs_manager is not null\n\t\t\t\torder by \ths_manager\n\t\t\t) as tm \non \t\t\ttm.odoo_id = lmm.Master_Account_ID\n-------\nleft join\t\"verticadb\".\"analytics\".\"oy_dbt_special_accounts\" as sa --analytics.oy_special_accounts\non \t\t\tca.account_id = sa.charging_id\n-------\nleft join \t(\n\t\t\t\tselect \t\t* \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_sales_plans_gsheet\" --sandbox.oy_sales_plans_gsheet \n\t\t\t\twhere\t\tNo<>3 order by No\n\t\t\t) as top40\non \t\t\tlmm.Master_Account_ID = top40.\"Odoo ID\"\n-------\nwhere\t    lmm.Master_Account_Name <> 'migration traffic'\n            and ca.event_type is not NULL\ngroup by\t1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21\norder by \tdate(ca.hour_nk) desc\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.live_revenue.oy_dbt_consumption_agg"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-09-13T09:30:41.108191Z", "completed_at": "2023-09-13T09:30:41.113834Z"}, {"name": "execute", "started_at": "2023-09-13T09:30:41.114571Z", "completed_at": "2023-09-13T09:30:48.652271Z"}], "thread_id": "Thread-1", "execution_time": 7.5462892055511475, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_dbt_ocs_balance\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_ocs_balance__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n    \n\nselect \t*\n\t\t, case \twhen \tsplit_part(selling_rate,'USD',1)::numeric(10,8) > 0 and split_part(selling_rate,'USD',1)::numeric(10,8)<>1 \n\t\t\t\t\t\tthen left(split_part(selling_rate,'USD',1), 10)::numeric(10,8) \n\t\t\t\telse \tnull\n\t\t  end as raw_selling_rate\nfrom \t\"verticadb\".\"raw\".\"ocs__balance\" --raw.ocs__balance \nwhere \t1=1 \n\t\tand SELLING_RATE not ilike '%SAR%'\n\t\tand balance_type=2\n-----\nunion\nselect \t*\n\t\t, case \twhen \tsplit_part(selling_rate,'SAR',1)::numeric(10,8) > 0 and split_part(selling_rate,'SAR',1)::numeric(10,8)<>1\n\t\t\t\t\t\tthen left(split_part(selling_rate,'SAR',1), 10)::numeric(10,8) \n\t\t\t\telse \tnull \n\t\t  end as raw_selling_rate\nfrom \t\"verticadb\".\"raw\".\"ocs__balance\" --raw.ocs__balance\nwhere \t1=1 \n\t\tand SELLING_RATE ilike '%SAR%'\n\t\tand balance_type=2\n-----\nunion\nselect \t*\n\t\t, SELLING_RATE::numeric(10,8) as raw_selling_rate\nfrom \t\"verticadb\".\"raw\".\"ocs__balance\" --raw.ocs__balance \nwhere \t1=1 \n\t\tand SELLING_RATE is null\t\n\t\tand balance_type=2\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_dbt_ocs_balance\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_ocs_balance__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n    \n\nselect \t*\n\t\t, case \twhen \tsplit_part(selling_rate,'USD',1)::numeric(10,8) > 0 and split_part(selling_rate,'USD',1)::numeric(10,8)<>1 \n\t\t\t\t\t\tthen left(split_part(selling_rate,'USD',1), 10)::numeric(10,8) \n\t\t\t\telse \tnull\n\t\t  end as raw_selling_rate\nfrom \t\"verticadb\".\"raw\".\"ocs__balance\" --raw.ocs__balance \nwhere \t1=1 \n\t\tand SELLING_RATE not ilike '%SAR%'\n\t\tand balance_type=2\n-----\nunion\nselect \t*\n\t\t, case \twhen \tsplit_part(selling_rate,'SAR',1)::numeric(10,8) > 0 and split_part(selling_rate,'SAR',1)::numeric(10,8)<>1\n\t\t\t\t\t\tthen left(split_part(selling_rate,'SAR',1), 10)::numeric(10,8) \n\t\t\t\telse \tnull \n\t\t  end as raw_selling_rate\nfrom \t\"verticadb\".\"raw\".\"ocs__balance\" --raw.ocs__balance\nwhere \t1=1 \n\t\tand SELLING_RATE ilike '%SAR%'\n\t\tand balance_type=2\n-----\nunion\nselect \t*\n\t\t, SELLING_RATE::numeric(10,8) as raw_selling_rate\nfrom \t\"verticadb\".\"raw\".\"ocs__balance\" --raw.ocs__balance \nwhere \t1=1 \n\t\tand SELLING_RATE is null\t\n\t\tand balance_type=2\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.live_revenue.oy_dbt_ocs_balance"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-09-13T09:30:48.657331Z", "completed_at": "2023-09-13T09:30:48.663866Z"}, {"name": "execute", "started_at": "2023-09-13T09:30:48.664535Z", "completed_at": "2023-09-13T09:30:57.253218Z"}], "thread_id": "Thread-1", "execution_time": 8.598505973815918, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_dbt_ranking_sell_rates\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_ranking_sell_rates__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n    \n\nselect \t\tRANK () over (partition by id order by max_ingestion_date) as rnk\n\t\t\t, COUNT(id) over (partition by id) as cnt\n\t\t\t, a.*\n\t\t\t, da.pd_user_account_name, da.pd_user_user_name\n\t\t\t, lm.Master_Account_Name, lm.Master_Account_ID\nfrom \t\t(\n\t\t\t\tselect \t\tcharging_id, id, name, selling_rate_numeric\n\t\t\t\t\t\t\t, max(ingestion_date) as max_ingestion_date \n\t\t\t\tfrom \t\t(\n\t\t\t\t\t\t\t\tselect \t\ta.account_id as charging_id, b.*\n\t\t\t\t\t\t\t\t\t\t\t, left(split_part(selling_rate,'USD',1), 8)::numeric(20,6) AS selling_rate_numeric  \n\t\t\t\t\t\t\t\tfrom \t\t\"verticadb\".\"raw\".\"ocs__balance\" as b --raw.ocs__balance\n\t\t\t\t\t\t\t\tleft join\t\"verticadb\".\"raw\".\"ocs__account\" as a --raw.ocs__account\n\t\t\t\t\t\t\t\ton \t\t\tb.account_id = a.id\n\t\t\t\t\t\t\t\twhere \t\tbalance_type=2\n\t\t\t\t\t\t\t\t\t\t\tand SELLING_RATE not ilike '%SAR%'\n\t\t\t\t\t\t\t\t\t\t\t--and ingestion_date<='2023-04-26' \n\t\t\t\t\t\t\t\t\t\t\t--the date range is chosen based on the bugfix in this Slack thread:\n\t\t\t\t\t\t\t\t\t\t\t--https://unifonic.slack.com/archives/C04KV5EGUDC/p1682572150715099?thread_ts=1682441533.662779&cid=C04KV5EGUDC\n\t\t\t\t\t\t\t\t\t\t\t--and a.account_id = 10005213\n\t\t\t\t\t\t\t)x\n\t\t\t\tgroup by \t1,2,3,4\n\t\t\t) as a\n---\nleft join \t\"verticadb\".\"standard\".\"dim_accounts\" as da --standard.dim_accounts \non \t\t\t\ta.charging_id = da.charging_id::VARCHAR2 \n---\nleft join \t\"verticadb\".\"analytics\".\"lm_v_master_account_mapping\" as lm --analytics.lm_v_master_account_mapping\non \t\t\ta.charging_id = lm.Charging_ID_L0::VARCHAR2 \n---\nwhere  \t\t1=1\n\t\t\tand selling_rate_numeric<>1 and selling_rate_numeric<>0 and selling_rate_numeric is not null \norder by \tid , max_ingestion_date\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_dbt_ranking_sell_rates\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_ranking_sell_rates__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n    \n\nselect \t\tRANK () over (partition by id order by max_ingestion_date) as rnk\n\t\t\t, COUNT(id) over (partition by id) as cnt\n\t\t\t, a.*\n\t\t\t, da.pd_user_account_name, da.pd_user_user_name\n\t\t\t, lm.Master_Account_Name, lm.Master_Account_ID\nfrom \t\t(\n\t\t\t\tselect \t\tcharging_id, id, name, selling_rate_numeric\n\t\t\t\t\t\t\t, max(ingestion_date) as max_ingestion_date \n\t\t\t\tfrom \t\t(\n\t\t\t\t\t\t\t\tselect \t\ta.account_id as charging_id, b.*\n\t\t\t\t\t\t\t\t\t\t\t, left(split_part(selling_rate,'USD',1), 8)::numeric(20,6) AS selling_rate_numeric  \n\t\t\t\t\t\t\t\tfrom \t\t\"verticadb\".\"raw\".\"ocs__balance\" as b --raw.ocs__balance\n\t\t\t\t\t\t\t\tleft join\t\"verticadb\".\"raw\".\"ocs__account\" as a --raw.ocs__account\n\t\t\t\t\t\t\t\ton \t\t\tb.account_id = a.id\n\t\t\t\t\t\t\t\twhere \t\tbalance_type=2\n\t\t\t\t\t\t\t\t\t\t\tand SELLING_RATE not ilike '%SAR%'\n\t\t\t\t\t\t\t\t\t\t\t--and ingestion_date<='2023-04-26' \n\t\t\t\t\t\t\t\t\t\t\t--the date range is chosen based on the bugfix in this Slack thread:\n\t\t\t\t\t\t\t\t\t\t\t--https://unifonic.slack.com/archives/C04KV5EGUDC/p1682572150715099?thread_ts=1682441533.662779&cid=C04KV5EGUDC\n\t\t\t\t\t\t\t\t\t\t\t--and a.account_id = 10005213\n\t\t\t\t\t\t\t)x\n\t\t\t\tgroup by \t1,2,3,4\n\t\t\t) as a\n---\nleft join \t\"verticadb\".\"standard\".\"dim_accounts\" as da --standard.dim_accounts \non \t\t\t\ta.charging_id = da.charging_id::VARCHAR2 \n---\nleft join \t\"verticadb\".\"analytics\".\"lm_v_master_account_mapping\" as lm --analytics.lm_v_master_account_mapping\non \t\t\ta.charging_id = lm.Charging_ID_L0::VARCHAR2 \n---\nwhere  \t\t1=1\n\t\t\tand selling_rate_numeric<>1 and selling_rate_numeric<>0 and selling_rate_numeric is not null \norder by \tid , max_ingestion_date\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.live_revenue.oy_dbt_ranking_sell_rates"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-09-13T09:30:57.268157Z", "completed_at": "2023-09-13T09:30:57.275020Z"}, {"name": "execute", "started_at": "2023-09-13T09:30:57.275736Z", "completed_at": "2023-09-13T09:31:12.752390Z"}], "thread_id": "Thread-1", "execution_time": 15.486729145050049, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_dbt_selling_rates_imputed\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_selling_rates_imputed__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n    \nwith base as\n(\nselect \t\tob.* \n\t\t\t, rr.recent_selling_rate --, rr.max_ingestion_date \n\t\t\t, fr.first_selling_rate\n\t\t\t, p.parent_selling_rate\n\t\t\t, coalesce(rr.charging_id, fr.charging_id) as charging_id\n\t\t\t, da.pd_user_account_name, da.pd_user_user_name\n\t\t\t, coalesce(lm.manual_odoo_name, lm.Master_Account_Name) as Master_Account_Name\n\t\t\t, coalesce(lm.manual_odoo_id, lm.Master_Account_ID) as Master_Account_ID\nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_ocs_balance\" as ob --analytics.oy_ocs__balance_1 \nleft join \t(\t\n\t\t\t\tselect \t\tdistinct id, name , selling_rate_numeric as recent_selling_rate, charging_id\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_ranking_sell_rates\" --analytics.oy_ranking_sell_rates\n\t\t\t\twhere \t\trnk = cnt\n\t\t\t)\tas rr --recent selling rates\non \t\t\tob.id = rr.id\n------\nleft join \t(\t\n\t\t\t\tselect \t\tdistinct id, name , selling_rate_numeric as first_selling_rate, charging_id\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_ranking_sell_rates\" --analytics.oy_ranking_sell_rates \n\t\t\t\twhere \t\trnk = 1\n\t\t\t)\tas fr --first/old selling rates\non \t\t\tob.id = fr.id\n------\nleft join \t(\t\n\t\t\t\tselect \t\tdistinct name , selling_rate_numeric as parent_selling_rate, charging_id\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_ranking_sell_rates\" --analytics.oy_ranking_sell_rates\n\t\t\t\twhere \t\trnk = cnt and charging_id = split_part(name, '_', 1)\n\t\t\t)\tas p --where no match on id for subaccounts\non \t\t\tob.name = p.name\n---\nleft join\traw.ocs__account as ra\non \t\t\tob.account_id = ra.id\n---\nleft join \t(select * from standard.dim_accounts) as da\non \t\t\tra.account_id = da.charging_id::VARCHAR2 \n---\nleft join \t(\n\t\t\t\tselect \t\t*\n\t\t\t\tfrom \t\tanalytics.lm_v_master_account_mapping\n\t\t\t) as lm\non \t\t\tra.account_id = lm.Charging_ID_L0::VARCHAR2 \n---\nwhere\t\t1=1 \n\t\t\tand ob.name not ilike '%test%'\n\t\t\tand ob.balance_type = 2\norder by \tob.id, ob.ingestion_date\n) -- circa 350 testing accounts\nselect \t\tid, parent_balance_id as parent_id\n\t\t\t, name, ingestion_date, SELLING_RATE, raw_selling_rate\n\t\t\t, recent_selling_rate, first_selling_rate, parent_selling_rate\n\t\t\t, coalesce(parent_selling_rate, recent_selling_rate, first_selling_rate, raw_selling_rate) as analytics_selling_rate\n\t\t\t, case \twhen Master_Account_ID = 4112 and ingestion_date<='2023-09-30' then 0.01066667 --'Saudi Manpower Solutions Co.', Thomas will and will upload correct rates before 2023-06-14\n\t\t\t\t\twhen Master_Account_ID = 10236 and ingestion_date<='2023-09-30' then 0.00986667 --'National Housing Company', Thomas will and will upload correct rates before 2023-06-14\n\t\t\t\t\twhen Master_Account_ID = 4170 and ingestion_date<='2023-09-30' then  0.00960 --'Al-Qdrah for Communications and Information Technology Ltd Co. - Qdrah / Zid'\t\t\t\t\n\t\t\t\t\twhen Master_Account_ID = 9198 and ingestion_date<='2023-09-30' then  0.01120 --Arabian Oud Trading Company.\n\t\t\t\t\twhen Master_Account_ID = 4154 and ingestion_date<='2023-09-30' then  0.01146667 --Takamol Holding\n\t\t\t\t\twhen Master_Account_ID = 3183 and ingestion_date<='2023-09-30' then  0.01013333 --Careem Transportation Information Technology Company , Master_Account_ID = 3183 \n\t\t\t\t\twhen Master_Account_ID = 10626 and ingestion_date<='2023-09-30' then 0.01243760 --Careem Networks FZ LLC (AE) , Master_Account_ID = 10626\n\t\t\t\t\twhen name = '10002202_Saudi Arabia SMS Package' and ingestion_date<='2023-09-30' then  0.01066667 --Nakhla Information Systems Technology (SA), Master_Account_ID = 3368\n\t\t\t\t\twhen name = '10002202_UAE All Operators' and ingestion_date<='2023-09-30' then  0.01347856 --Tamara FZE, Master_Account_ID = 9598\n\t\t\t\t\twhen name = '20000600_Basic KSA Package with International Support' and ingestion_date<='2023-06-30' then  0.01 --Tabby FZ-LLC, Master_Account_ID = 10168\n\t\t\t\t\twhen Master_Account_ID = 3436 and ingestion_date<='2023-09-30' then 0.00986667 -- Al-Nahdi Medical Company\n\t\t\t\t\twhen Master_Account_ID = 3776 and ingestion_date<='2023-09-30' then 0.01026667 -- Tamkeentech - Tamkeen Technologies\n\t\t\t\t\twhen Master_Account_ID = 3394 and ingestion_date<='2023-09-30' then 0.01013333 -- Saudi Company For Hardware - SACO\n\t\t\t\t\twhen Master_Account_ID = 11055 and ingestion_date<='2023-09-30' then 0.01653333 -- Abdul Hadi Hamoud Al-Qahtani Foundation for Information Systems Technology\n\t\t\t\t\twhen Master_Account_ID = 4253 and ingestion_date<='2023-06-30' then  0.03976533 -- B-Tech Trading and Distribution Co.\n\t\t\t\t\twhen Master_Account_ID = 12164 and ingestion_date<='2023-09-30' then 0.05333333 -- Unified Real Estate Development Company\n\t\t\t\t\twhen Master_Account_ID = 3168 and ingestion_date<='2023-09-30' then 0.0112 -- Azim Technical Financial Company Ltd.\n\t\t\t\t\twhen Master_Account_ID = 3469 and ingestion_date<='2023-09-30' then 0.03866667 -- Lazurde Company for Jewellery\n\t\t\t\t\twhen Master_Account_ID = 10368 and ingestion_date<='2023-09-30' then 0.01013333 -- Sondoq Alaibtikar for information and technology\n\t\t\t\t\twhen Master_Account_ID = 3965 and ingestion_date<='2023-09-30' then 0.013333 -- Kingdom Resources Trading Company - Sendebad\n\t\t\t\t\twhen Master_Account_ID = 3704 and ingestion_date<='2023-09-30' then 0.0105333  -- Aram Meem Trading Services Company - Toyou\n\t\t\t\t\twhen Master_Account_ID = 3436 and ingestion_date<='2023-09-30' then 0.00986667  -- Al-Nahdi Medical Company\n\t\t\t\t\telse null\n\t\t\t  end as manual_sell_rate\n\t\t\t, Master_Account_Name, pd_user_user_name, pd_user_account_name, Master_Account_ID\n\t\t\t, charging_id\n\t\t\t, start_date, end_date, initial_units, units, account_id, bundle_name, status\nfrom \t\tbase\nwhere \t\t1=1 \norder by \tid, ingestion_date\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_dbt_selling_rates_imputed\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_selling_rates_imputed__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n    \nwith base as\n(\nselect \t\tob.* \n\t\t\t, rr.recent_selling_rate --, rr.max_ingestion_date \n\t\t\t, fr.first_selling_rate\n\t\t\t, p.parent_selling_rate\n\t\t\t, coalesce(rr.charging_id, fr.charging_id) as charging_id\n\t\t\t, da.pd_user_account_name, da.pd_user_user_name\n\t\t\t, coalesce(lm.manual_odoo_name, lm.Master_Account_Name) as Master_Account_Name\n\t\t\t, coalesce(lm.manual_odoo_id, lm.Master_Account_ID) as Master_Account_ID\nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_ocs_balance\" as ob --analytics.oy_ocs__balance_1 \nleft join \t(\t\n\t\t\t\tselect \t\tdistinct id, name , selling_rate_numeric as recent_selling_rate, charging_id\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_ranking_sell_rates\" --analytics.oy_ranking_sell_rates\n\t\t\t\twhere \t\trnk = cnt\n\t\t\t)\tas rr --recent selling rates\non \t\t\tob.id = rr.id\n------\nleft join \t(\t\n\t\t\t\tselect \t\tdistinct id, name , selling_rate_numeric as first_selling_rate, charging_id\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_ranking_sell_rates\" --analytics.oy_ranking_sell_rates \n\t\t\t\twhere \t\trnk = 1\n\t\t\t)\tas fr --first/old selling rates\non \t\t\tob.id = fr.id\n------\nleft join \t(\t\n\t\t\t\tselect \t\tdistinct name , selling_rate_numeric as parent_selling_rate, charging_id\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_ranking_sell_rates\" --analytics.oy_ranking_sell_rates\n\t\t\t\twhere \t\trnk = cnt and charging_id = split_part(name, '_', 1)\n\t\t\t)\tas p --where no match on id for subaccounts\non \t\t\tob.name = p.name\n---\nleft join\traw.ocs__account as ra\non \t\t\tob.account_id = ra.id\n---\nleft join \t(select * from standard.dim_accounts) as da\non \t\t\tra.account_id = da.charging_id::VARCHAR2 \n---\nleft join \t(\n\t\t\t\tselect \t\t*\n\t\t\t\tfrom \t\tanalytics.lm_v_master_account_mapping\n\t\t\t) as lm\non \t\t\tra.account_id = lm.Charging_ID_L0::VARCHAR2 \n---\nwhere\t\t1=1 \n\t\t\tand ob.name not ilike '%test%'\n\t\t\tand ob.balance_type = 2\norder by \tob.id, ob.ingestion_date\n) -- circa 350 testing accounts\nselect \t\tid, parent_balance_id as parent_id\n\t\t\t, name, ingestion_date, SELLING_RATE, raw_selling_rate\n\t\t\t, recent_selling_rate, first_selling_rate, parent_selling_rate\n\t\t\t, coalesce(parent_selling_rate, recent_selling_rate, first_selling_rate, raw_selling_rate) as analytics_selling_rate\n\t\t\t, case \twhen Master_Account_ID = 4112 and ingestion_date<='2023-09-30' then 0.01066667 --'Saudi Manpower Solutions Co.', Thomas will and will upload correct rates before 2023-06-14\n\t\t\t\t\twhen Master_Account_ID = 10236 and ingestion_date<='2023-09-30' then 0.00986667 --'National Housing Company', Thomas will and will upload correct rates before 2023-06-14\n\t\t\t\t\twhen Master_Account_ID = 4170 and ingestion_date<='2023-09-30' then  0.00960 --'Al-Qdrah for Communications and Information Technology Ltd Co. - Qdrah / Zid'\t\t\t\t\n\t\t\t\t\twhen Master_Account_ID = 9198 and ingestion_date<='2023-09-30' then  0.01120 --Arabian Oud Trading Company.\n\t\t\t\t\twhen Master_Account_ID = 4154 and ingestion_date<='2023-09-30' then  0.01146667 --Takamol Holding\n\t\t\t\t\twhen Master_Account_ID = 3183 and ingestion_date<='2023-09-30' then  0.01013333 --Careem Transportation Information Technology Company , Master_Account_ID = 3183 \n\t\t\t\t\twhen Master_Account_ID = 10626 and ingestion_date<='2023-09-30' then 0.01243760 --Careem Networks FZ LLC (AE) , Master_Account_ID = 10626\n\t\t\t\t\twhen name = '10002202_Saudi Arabia SMS Package' and ingestion_date<='2023-09-30' then  0.01066667 --Nakhla Information Systems Technology (SA), Master_Account_ID = 3368\n\t\t\t\t\twhen name = '10002202_UAE All Operators' and ingestion_date<='2023-09-30' then  0.01347856 --Tamara FZE, Master_Account_ID = 9598\n\t\t\t\t\twhen name = '20000600_Basic KSA Package with International Support' and ingestion_date<='2023-06-30' then  0.01 --Tabby FZ-LLC, Master_Account_ID = 10168\n\t\t\t\t\twhen Master_Account_ID = 3436 and ingestion_date<='2023-09-30' then 0.00986667 -- Al-Nahdi Medical Company\n\t\t\t\t\twhen Master_Account_ID = 3776 and ingestion_date<='2023-09-30' then 0.01026667 -- Tamkeentech - Tamkeen Technologies\n\t\t\t\t\twhen Master_Account_ID = 3394 and ingestion_date<='2023-09-30' then 0.01013333 -- Saudi Company For Hardware - SACO\n\t\t\t\t\twhen Master_Account_ID = 11055 and ingestion_date<='2023-09-30' then 0.01653333 -- Abdul Hadi Hamoud Al-Qahtani Foundation for Information Systems Technology\n\t\t\t\t\twhen Master_Account_ID = 4253 and ingestion_date<='2023-06-30' then  0.03976533 -- B-Tech Trading and Distribution Co.\n\t\t\t\t\twhen Master_Account_ID = 12164 and ingestion_date<='2023-09-30' then 0.05333333 -- Unified Real Estate Development Company\n\t\t\t\t\twhen Master_Account_ID = 3168 and ingestion_date<='2023-09-30' then 0.0112 -- Azim Technical Financial Company Ltd.\n\t\t\t\t\twhen Master_Account_ID = 3469 and ingestion_date<='2023-09-30' then 0.03866667 -- Lazurde Company for Jewellery\n\t\t\t\t\twhen Master_Account_ID = 10368 and ingestion_date<='2023-09-30' then 0.01013333 -- Sondoq Alaibtikar for information and technology\n\t\t\t\t\twhen Master_Account_ID = 3965 and ingestion_date<='2023-09-30' then 0.013333 -- Kingdom Resources Trading Company - Sendebad\n\t\t\t\t\twhen Master_Account_ID = 3704 and ingestion_date<='2023-09-30' then 0.0105333  -- Aram Meem Trading Services Company - Toyou\n\t\t\t\t\twhen Master_Account_ID = 3436 and ingestion_date<='2023-09-30' then 0.00986667  -- Al-Nahdi Medical Company\n\t\t\t\t\telse null\n\t\t\t  end as manual_sell_rate\n\t\t\t, Master_Account_Name, pd_user_user_name, pd_user_account_name, Master_Account_ID\n\t\t\t, charging_id\n\t\t\t, start_date, end_date, initial_units, units, account_id, bundle_name, status\nfrom \t\tbase\nwhere \t\t1=1 \norder by \tid, ingestion_date\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.live_revenue.oy_dbt_selling_rates_imputed"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-09-13T09:31:12.758024Z", "completed_at": "2023-09-13T09:31:12.851595Z"}, {"name": "execute", "started_at": "2023-09-13T09:31:12.852214Z", "completed_at": "2023-09-13T09:31:43.058044Z"}], "thread_id": "Thread-1", "execution_time": 30.30216383934021, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_revenue_daily_enriched\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_revenue_daily_enriched__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n     \n\nwith  __dbt__cte__oy_dbt_GL_revenue as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue\n--\t\t\t\t\t\t\t, SUM(case \twhen Client_ID=3368 and GL_Reference='SMS Revenue Recognition May 2023' then 0 -- Exclude 'Nakhla Information Systems Technology' May adjustment\n--\t\t\t\t\t\t\t\t\t\telse Revenue_USD end\n--\t\t\t\t\t\t\t\t ) as GL_Revenue\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference not ilike '%Forfeiture%'\n            and GL_Reference not ilike '%Adjustments%'\n            and GL_Reference not ilike '%open account%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_open_acc as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Open_Acc_Revenue\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%open account%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_adjustments as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue_adjustm\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%Adjustments%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_forfeiture as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue_forfeit\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%Forfeiture%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),base as\n(\nselect \t\tCOALESCE (ca.rep_month, gl.first_date) as report_month\n\t\t\t, ca.*\n\t\t\t, case when top40.\"Customer Name\" is null then null else 'Top 40' end as client_rank\n\t\t\t, case \twhen bundle_type='mb' then charge \n\t\t\t\t\telse ca.charge*sr.raw_selling_rate \n\t\t\t  end as raw_revenue\n\t\t\t, case \twhen bundle_type='mb' then charge \n\t\t\t\t\telse ca.charge*COALESCE(sr.manual_sell_rate, sr.analytics_selling_rate, srp.parent_selling_rate)\n\t\t\t  end as analytics_revenue\n\t\t\t, case \twhen ca.bundle_type = 'mb' and lmm.Master_Account_Name='Mobile Telecommunications Company - Zain Saudi Arabia' and ca.date_nk<'2023-07-01'\n\t\t\t\t\t\t\tthen 0.0109*ca.units\n\t\t\t\t\twhen ca.bundle_type = 'mb' and lmm.Master_Account_Name='Mobile Telecommunications Company - Zain Saudi Arabia' and ca.date_nk>='2023-07-01'\n\t\t\t\t\t\t\tthen 0.01*ca.units\n\t\t\t\t\twhen ca.bundle_type = 'mb' then ca.charge\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t--0.0109 4-digit constrained which will be changed to more than 4 digit in June by Sven\n\t\t\t\t\t--https://unifonic.slack.com/archives/C04KV5EGUDC/p1684654979174349?thread_ts=1684328640.491369&cid=C04KV5EGUDC\n\t\t\t\t\t--https://unifonic.slack.com/archives/C04KV5EGUDC/p1684478079173099?thread_ts=1684328640.491369&cid=C04KV5EGUDC\n\t\t\t\t\telse ca.charge*COALESCE(sr.manual_sell_rate, sr.analytics_selling_rate, srp.parent_selling_rate)\n\t\t\t  end as final_revenue\n\t\t\t, gl.GL_Revenue, gl_open.GL_Open_Acc_Revenue, gl_adj.GL_Revenue_adjustm, gl_forfeit.GL_Revenue_forfeit\n\t\t\t, sr.SELLING_RATE\n\t\t\t, sr.raw_selling_rate, sr.analytics_selling_rate, sr.manual_sell_rate, srp.parent_selling_rate\n\t\t\t, COALESCE(ca.manual_odoo_id , lmm.Master_Account_ID, gl.Client_ID::VARCHAR2) as Master_Account_ID --Separate Tamara from Nakhla\n\t\t\t, COALESCE(ca.manual_odoo_name, lmm.Master_Account_Name, gl.Client_Account_Name) as Master_Account_Name --Separate Tamara from Nakhla\n\t\t\t, lmm.Master_Account_Origin, sa.Account_Type\nfrom\t\t\"verticadb\".\"analytics\".\"oy_dbt_consumption\" as ca \n-------\nleft join \t(\n\t\t\t\tselect \t\t* \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_selling_rates_imputed\" --analytics.oy_v_selling_rates_imputed --\n\t\t\t\twhere \t\tanalytics_selling_rate is not null\n\t\t\t\torder by \tid, ingestion_date\n\t\t\t) as sr\non\t\t\t1=1\n\t\t\tand ca.charging_id = sr.charging_id::INTEGER\n\t\t\tand RTRIM(ca.bundle_name, ' ') = sr.name\n\t\t\tand ca.date_nk = sr.ingestion_date\n-------Fallback logic for subaccounts 'where charging_id is null' use-case\nleft join \t(\n\t\t\t\tselect \t\tdistinct name, parent_selling_rate \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_selling_rates_imputed\" --analytics.oy_v_selling_rates_imputed --\n\t\t\t\twhere \t\tanalytics_selling_rate is not null\n\t\t\t) as srp\non\t\t\t1=1\n\t\t\tand RTRIM(ca.bundle_name, ' ') = srp.name\n-------\t\t\nleft join \t(\n\t\t\t\tselect \t\tdistinct a.ingestion_date, a.name, a.SELLING_RATE as SELLING_RATE_ORG, b.account_id as charging_id\n\t\t\t\tfrom \t\t\"verticadb\".\"raw\".\"ocs__balance\" as a --raw.ocs__balance\n\t\t\t\tleft join \t\"verticadb\".\"raw\".\"ocs__account\" as b --raw.ocs__account\n\t\t\t\ton \t\t\ta.account_id = b.id::VARCHAR2\n\t\t\t\twhere \t\t1=1 and a.SELLING_RATE not ilike '%SAR%' and split_part(a.name,'_',1)<>'mb'\n\t\t\t\torder by \tingestion_date desc\n\t\t\t) as aa\non\t\t\t1=1\n\t\t\tand ca.charging_id = aa.charging_id::INTEGER\n\t\t\tand RTRIM(ca.bundle_name, ' ') = aa.name\n\t\t\tand ca.date_nk = aa.ingestion_date\n-------\nleft join \t(\t\n\t\t\t\tselect \t\tCharging_ID_L0\n\t\t\t\t\t\t\t, COALESCE(manual_odoo_id, Master_Account_ID) as Master_Account_ID\n\t\t\t\t\t\t\t, COALESCE(manual_odoo_name, Master_Account_Name) as Master_Account_Name\n\t\t\t\t\t\t\t, Master_Account_Origin\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"lm_v_master_account_mapping\" --analytics.lm_v_master_account_mapping\n\t\t\t) as lmm\non \t\t\tca.charging_id = lmm.Charging_ID_L0\n-------\nleft join\t\"verticadb\".\"analytics\".\"oy_dbt_special_accounts\" as sa --analytics.oy_special_accounts\non \t\t\tca.charging_id = sa.charging_id\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue as gl\non\t\t\tca.rep_month = gl.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_open_acc as gl_open\non\t\t\tca.rep_month = gl_open.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl_open.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_adjustments as gl_adj\non\t\t\tca.rep_month = gl_adj.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl_adj.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_forfeiture as gl_forfeit\non\t\t\tca.rep_month = gl_forfeit.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl_forfeit.Client_ID\n-------\nleft join \t(\n\t\t\t\tselect \t\t* \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_sales_plans_gsheet\" --sandbox.oy_sales_plans_gsheet \n\t\t\t\twhere\t\tNo<>3 order by No\n\t\t\t) as top40\non \t\t\tcoalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = top40.\"Odoo ID\"\n-------\nwhere \t\t1=1 and report_month is not null\n--order by \tca.charging_id, ca.date_nk\n)\nselect \t\t--distinct\n\t\t\treport_month\n\t\t\t, date_nk\n\t\t\t, charging_id\n\t\t\t, pd_user_id\n\t\t\t, pd_user_account_name\n\t\t\t, Master_Account_ID\n\t\t\t, Master_Account_Name\n\t\t\t, client_rank\n\t\t\t, Master_Account_Origin\n\t\t\t, case when Account_Type is null then 'Client Account' else Account_Type end as Account_Type\n\t\t\t, bundle_name\n\t\t\t, pd_user_country\n\t\t\t, bundle_type\n\t\t\t, units\n\t\t\t, charge\n\t\t\t--, round(cdr_revenue,2) as cdr_revenue\n\t\t\t, round(raw_revenue,2) as raw_revenue\n\t\t\t, round(analytics_revenue,2) as analytics_revenue\n\t\t\t, round(final_revenue,2) as final_revenue\n\t\t\t, round(sum(charge) over (partition by Master_Account_ID, report_month),2) as final_charge_month\n\t\t\t, round(sum(final_revenue) over (partition by Master_Account_ID, report_month),2) as final_revenue_month\n\t\t\t, GL_Revenue\n\t\t\t, GL_Open_Acc_Revenue\n\t\t\t, GL_Revenue_adjustm\n\t\t\t, GL_Revenue_forfeit\n\t\t\t, round(sum(final_revenue) over (partition by Master_Account_ID, report_month)-coalesce(GL_Open_Acc_Revenue, GL_Revenue), 2) as var\n\t\t\t, case \twhen (GL_Revenue is null or GL_Revenue=0) and (GL_Open_Acc_Revenue is null or GL_Open_Acc_Revenue=0) then null \n\t\t\t\t\tELSE round(100*((sum(final_revenue) over (partition by Master_Account_ID, report_month))/coalesce(GL_Open_Acc_Revenue, GL_Revenue) - 1), 2)  \n\t\t\t  end as pct_var\n\t\t\t, round(sum(charge) over (partition by Master_Account_ID, report_month, charging_id),2) as final_charge_ch_id_month\n\t\t\t, case \twhen charge=0 or charge is null then null \n\t\t\t\t\twhen bundle_type = 'mb' then round(final_revenue/units,6)\n\t\t\t  \t\telse round(final_revenue/charge,6) \n\t\t\t  end as final_selling_rate\t\t\t \n\t\t\t, SELLING_RATE\n\t\t\t, raw_selling_rate\n\t\t\t--, cdr_selling_rate\n\t\t\t, analytics_selling_rate\n\t\t\t, manual_sell_rate\n\t\t\t, parent_selling_rate\n\t\t\t, tm.hs_team , tm.hs_manager, tm.tcsm_manager\nfrom \t\tbase\nleft join \t(\n\t\t\t\tselect \t\tdistinct\n\t\t\t\t\t\t\todoo_id, odoo_name, email, hs_team, hs_manager, hs_email, tcsm_manager\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_v_odoo_hs_team_manager\" --analytics.oy_v_odoo_hs_team_manager\n\t\t\t\twhere \t\ths_team is not null and hs_manager is not null\n\t\t\t\torder by \ths_manager\n\t\t\t)as tm \non \t\t\ttm.odoo_id = base.Master_Account_ID\nwhere \t\t1=1 --and charging_id = 20002456 --Saudi Abyat for Building Materials OCS anomaly https://docs.google.com/spreadsheets/d/1ryZh7N_7zbnhgZIaLkCv2u2TzWuXBn1CY02ZKPbZEtY/edit?usp=sharing\n--order by \tcharging_id, date_nk\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_revenue_daily_enriched\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_revenue_daily_enriched__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n     \n\nwith  __dbt__cte__oy_dbt_GL_revenue as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue\n--\t\t\t\t\t\t\t, SUM(case \twhen Client_ID=3368 and GL_Reference='SMS Revenue Recognition May 2023' then 0 -- Exclude 'Nakhla Information Systems Technology' May adjustment\n--\t\t\t\t\t\t\t\t\t\telse Revenue_USD end\n--\t\t\t\t\t\t\t\t ) as GL_Revenue\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference not ilike '%Forfeiture%'\n            and GL_Reference not ilike '%Adjustments%'\n            and GL_Reference not ilike '%open account%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_open_acc as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Open_Acc_Revenue\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%open account%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_adjustments as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue_adjustm\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%Adjustments%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_forfeiture as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue_forfeit\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%Forfeiture%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),base as\n(\nselect \t\tCOALESCE (ca.rep_month, gl.first_date) as report_month\n\t\t\t, ca.*\n\t\t\t, case when top40.\"Customer Name\" is null then null else 'Top 40' end as client_rank\n\t\t\t, case \twhen bundle_type='mb' then charge \n\t\t\t\t\telse ca.charge*sr.raw_selling_rate \n\t\t\t  end as raw_revenue\n\t\t\t, case \twhen bundle_type='mb' then charge \n\t\t\t\t\telse ca.charge*COALESCE(sr.manual_sell_rate, sr.analytics_selling_rate, srp.parent_selling_rate)\n\t\t\t  end as analytics_revenue\n\t\t\t, case \twhen ca.bundle_type = 'mb' and lmm.Master_Account_Name='Mobile Telecommunications Company - Zain Saudi Arabia' and ca.date_nk<'2023-07-01'\n\t\t\t\t\t\t\tthen 0.0109*ca.units\n\t\t\t\t\twhen ca.bundle_type = 'mb' and lmm.Master_Account_Name='Mobile Telecommunications Company - Zain Saudi Arabia' and ca.date_nk>='2023-07-01'\n\t\t\t\t\t\t\tthen 0.01*ca.units\n\t\t\t\t\twhen ca.bundle_type = 'mb' then ca.charge\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t--0.0109 4-digit constrained which will be changed to more than 4 digit in June by Sven\n\t\t\t\t\t--https://unifonic.slack.com/archives/C04KV5EGUDC/p1684654979174349?thread_ts=1684328640.491369&cid=C04KV5EGUDC\n\t\t\t\t\t--https://unifonic.slack.com/archives/C04KV5EGUDC/p1684478079173099?thread_ts=1684328640.491369&cid=C04KV5EGUDC\n\t\t\t\t\telse ca.charge*COALESCE(sr.manual_sell_rate, sr.analytics_selling_rate, srp.parent_selling_rate)\n\t\t\t  end as final_revenue\n\t\t\t, gl.GL_Revenue, gl_open.GL_Open_Acc_Revenue, gl_adj.GL_Revenue_adjustm, gl_forfeit.GL_Revenue_forfeit\n\t\t\t, sr.SELLING_RATE\n\t\t\t, sr.raw_selling_rate, sr.analytics_selling_rate, sr.manual_sell_rate, srp.parent_selling_rate\n\t\t\t, COALESCE(ca.manual_odoo_id , lmm.Master_Account_ID, gl.Client_ID::VARCHAR2) as Master_Account_ID --Separate Tamara from Nakhla\n\t\t\t, COALESCE(ca.manual_odoo_name, lmm.Master_Account_Name, gl.Client_Account_Name) as Master_Account_Name --Separate Tamara from Nakhla\n\t\t\t, lmm.Master_Account_Origin, sa.Account_Type\nfrom\t\t\"verticadb\".\"analytics\".\"oy_dbt_consumption\" as ca \n-------\nleft join \t(\n\t\t\t\tselect \t\t* \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_selling_rates_imputed\" --analytics.oy_v_selling_rates_imputed --\n\t\t\t\twhere \t\tanalytics_selling_rate is not null\n\t\t\t\torder by \tid, ingestion_date\n\t\t\t) as sr\non\t\t\t1=1\n\t\t\tand ca.charging_id = sr.charging_id::INTEGER\n\t\t\tand RTRIM(ca.bundle_name, ' ') = sr.name\n\t\t\tand ca.date_nk = sr.ingestion_date\n-------Fallback logic for subaccounts 'where charging_id is null' use-case\nleft join \t(\n\t\t\t\tselect \t\tdistinct name, parent_selling_rate \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_selling_rates_imputed\" --analytics.oy_v_selling_rates_imputed --\n\t\t\t\twhere \t\tanalytics_selling_rate is not null\n\t\t\t) as srp\non\t\t\t1=1\n\t\t\tand RTRIM(ca.bundle_name, ' ') = srp.name\n-------\t\t\nleft join \t(\n\t\t\t\tselect \t\tdistinct a.ingestion_date, a.name, a.SELLING_RATE as SELLING_RATE_ORG, b.account_id as charging_id\n\t\t\t\tfrom \t\t\"verticadb\".\"raw\".\"ocs__balance\" as a --raw.ocs__balance\n\t\t\t\tleft join \t\"verticadb\".\"raw\".\"ocs__account\" as b --raw.ocs__account\n\t\t\t\ton \t\t\ta.account_id = b.id::VARCHAR2\n\t\t\t\twhere \t\t1=1 and a.SELLING_RATE not ilike '%SAR%' and split_part(a.name,'_',1)<>'mb'\n\t\t\t\torder by \tingestion_date desc\n\t\t\t) as aa\non\t\t\t1=1\n\t\t\tand ca.charging_id = aa.charging_id::INTEGER\n\t\t\tand RTRIM(ca.bundle_name, ' ') = aa.name\n\t\t\tand ca.date_nk = aa.ingestion_date\n-------\nleft join \t(\t\n\t\t\t\tselect \t\tCharging_ID_L0\n\t\t\t\t\t\t\t, COALESCE(manual_odoo_id, Master_Account_ID) as Master_Account_ID\n\t\t\t\t\t\t\t, COALESCE(manual_odoo_name, Master_Account_Name) as Master_Account_Name\n\t\t\t\t\t\t\t, Master_Account_Origin\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"lm_v_master_account_mapping\" --analytics.lm_v_master_account_mapping\n\t\t\t) as lmm\non \t\t\tca.charging_id = lmm.Charging_ID_L0\n-------\nleft join\t\"verticadb\".\"analytics\".\"oy_dbt_special_accounts\" as sa --analytics.oy_special_accounts\non \t\t\tca.charging_id = sa.charging_id\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue as gl\non\t\t\tca.rep_month = gl.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_open_acc as gl_open\non\t\t\tca.rep_month = gl_open.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl_open.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_adjustments as gl_adj\non\t\t\tca.rep_month = gl_adj.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl_adj.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_forfeiture as gl_forfeit\non\t\t\tca.rep_month = gl_forfeit.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl_forfeit.Client_ID\n-------\nleft join \t(\n\t\t\t\tselect \t\t* \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_sales_plans_gsheet\" --sandbox.oy_sales_plans_gsheet \n\t\t\t\twhere\t\tNo<>3 order by No\n\t\t\t) as top40\non \t\t\tcoalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = top40.\"Odoo ID\"\n-------\nwhere \t\t1=1 and report_month is not null\n--order by \tca.charging_id, ca.date_nk\n)\nselect \t\t--distinct\n\t\t\treport_month\n\t\t\t, date_nk\n\t\t\t, charging_id\n\t\t\t, pd_user_id\n\t\t\t, pd_user_account_name\n\t\t\t, Master_Account_ID\n\t\t\t, Master_Account_Name\n\t\t\t, client_rank\n\t\t\t, Master_Account_Origin\n\t\t\t, case when Account_Type is null then 'Client Account' else Account_Type end as Account_Type\n\t\t\t, bundle_name\n\t\t\t, pd_user_country\n\t\t\t, bundle_type\n\t\t\t, units\n\t\t\t, charge\n\t\t\t--, round(cdr_revenue,2) as cdr_revenue\n\t\t\t, round(raw_revenue,2) as raw_revenue\n\t\t\t, round(analytics_revenue,2) as analytics_revenue\n\t\t\t, round(final_revenue,2) as final_revenue\n\t\t\t, round(sum(charge) over (partition by Master_Account_ID, report_month),2) as final_charge_month\n\t\t\t, round(sum(final_revenue) over (partition by Master_Account_ID, report_month),2) as final_revenue_month\n\t\t\t, GL_Revenue\n\t\t\t, GL_Open_Acc_Revenue\n\t\t\t, GL_Revenue_adjustm\n\t\t\t, GL_Revenue_forfeit\n\t\t\t, round(sum(final_revenue) over (partition by Master_Account_ID, report_month)-coalesce(GL_Open_Acc_Revenue, GL_Revenue), 2) as var\n\t\t\t, case \twhen (GL_Revenue is null or GL_Revenue=0) and (GL_Open_Acc_Revenue is null or GL_Open_Acc_Revenue=0) then null \n\t\t\t\t\tELSE round(100*((sum(final_revenue) over (partition by Master_Account_ID, report_month))/coalesce(GL_Open_Acc_Revenue, GL_Revenue) - 1), 2)  \n\t\t\t  end as pct_var\n\t\t\t, round(sum(charge) over (partition by Master_Account_ID, report_month, charging_id),2) as final_charge_ch_id_month\n\t\t\t, case \twhen charge=0 or charge is null then null \n\t\t\t\t\twhen bundle_type = 'mb' then round(final_revenue/units,6)\n\t\t\t  \t\telse round(final_revenue/charge,6) \n\t\t\t  end as final_selling_rate\t\t\t \n\t\t\t, SELLING_RATE\n\t\t\t, raw_selling_rate\n\t\t\t--, cdr_selling_rate\n\t\t\t, analytics_selling_rate\n\t\t\t, manual_sell_rate\n\t\t\t, parent_selling_rate\n\t\t\t, tm.hs_team , tm.hs_manager, tm.tcsm_manager\nfrom \t\tbase\nleft join \t(\n\t\t\t\tselect \t\tdistinct\n\t\t\t\t\t\t\todoo_id, odoo_name, email, hs_team, hs_manager, hs_email, tcsm_manager\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_v_odoo_hs_team_manager\" --analytics.oy_v_odoo_hs_team_manager\n\t\t\t\twhere \t\ths_team is not null and hs_manager is not null\n\t\t\t\torder by \ths_manager\n\t\t\t)as tm \non \t\t\ttm.odoo_id = base.Master_Account_ID\nwhere \t\t1=1 --and charging_id = 20002456 --Saudi Abyat for Building Materials OCS anomaly https://docs.google.com/spreadsheets/d/1ryZh7N_7zbnhgZIaLkCv2u2TzWuXBn1CY02ZKPbZEtY/edit?usp=sharing\n--order by \tcharging_id, date_nk\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.live_revenue.oy_revenue_daily_enriched"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-09-13T09:31:43.063660Z", "completed_at": "2023-09-13T09:31:43.137832Z"}, {"name": "execute", "started_at": "2023-09-13T09:31:43.138447Z", "completed_at": "2023-09-13T09:32:47.557252Z"}], "thread_id": "Thread-1", "execution_time": 64.495774269104, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_revenue_daily_tariff\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_revenue_daily_tariff__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n     \n\nwith  __dbt__cte__oy_dbt_consumption_agg_sms as (\n \n\nselect \t\t*\nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_consumption_agg\"\nwhere \t\tevent_type = 'default.sms'\n            and date_nk >= '2023-01-01'\n            and Account_Type in ('Client Account - Open', 'Client Account')\n),  __dbt__cte__oy_dbt_GL_revenue as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue\n--\t\t\t\t\t\t\t, SUM(case \twhen Client_ID=3368 and GL_Reference='SMS Revenue Recognition May 2023' then 0 -- Exclude 'Nakhla Information Systems Technology' May adjustment\n--\t\t\t\t\t\t\t\t\t\telse Revenue_USD end\n--\t\t\t\t\t\t\t\t ) as GL_Revenue\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference not ilike '%Forfeiture%'\n            and GL_Reference not ilike '%Adjustments%'\n            and GL_Reference not ilike '%open account%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_open_acc as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Open_Acc_Revenue\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%open account%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_adjustments as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue_adjustm\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%Adjustments%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_forfeiture as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue_forfeit\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%Forfeiture%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),base as\n(\nselect \t\tCOALESCE (ca.rep_month, gl.first_date) as report_month\n\t\t\t, ca.*\n\t\t\t, case \twhen bundle_type='mb' then charge \n\t\t\t\t\telse ca.charge*sr.raw_selling_rate \n\t\t\t  end as raw_revenue\n\t\t\t, case \twhen bundle_type='mb' then charge \n\t\t\t\t\telse ca.charge*COALESCE(sr.manual_sell_rate, sr.analytics_selling_rate, srp.parent_selling_rate)\n\t\t\t  end as analytics_revenue\n\t\t\t, case \twhen ca.bundle_type = 'mb' and ca.Master_Account_Name='Mobile Telecommunications Company - Zain Saudi Arabia' and ca.date_nk<'2023-07-01'\n\t\t\t\t\t\t\tthen 0.0109*ca.units\n\t\t\t\t\twhen ca.bundle_type = 'mb' and ca.Master_Account_Name='Mobile Telecommunications Company - Zain Saudi Arabia' and ca.date_nk>='2023-07-01'\n\t\t\t\t\t\t\tthen 0.01*ca.units\n\t\t\t\t\twhen ca.bundle_type = 'mb' then ca.charge\n\t\t\t\t\t--0.0109 4-digit constrained which will be changed to more than 4 digit in June by Sven\n\t\t\t\t\t--https://unifonic.slack.com/archives/C04KV5EGUDC/p1684654979174349?thread_ts=1684328640.491369&cid=C04KV5EGUDC\n\t\t\t\t\t--https://unifonic.slack.com/archives/C04KV5EGUDC/p1684478079173099?thread_ts=1684328640.491369&cid=C04KV5EGUDC\n\t\t\t\t\telse ca.charge*COALESCE(sr.manual_sell_rate, sr.analytics_selling_rate, srp.parent_selling_rate)\n\t\t\t  end as final_revenue\n\t\t\t, gl.GL_Revenue, gl_open.GL_Open_Acc_Revenue, gl_adj.GL_Revenue_adjustm, gl_forfeit.GL_Revenue_forfeit\n\t\t\t, sr.SELLING_RATE\n\t\t\t, sr.raw_selling_rate, sr.analytics_selling_rate, sr.manual_sell_rate, srp.parent_selling_rate\n\t\t\t, COALESCE(ca.manual_odoo_id , ca.Master_Account_ID, gl.Client_ID::VARCHAR2) as Master_Account_ID_coalesce --Separate Tamara from Nakhla\n\t\t\t, COALESCE(ca.manual_odoo_name, ca.Master_Account_Name, gl.Client_Account_Name) as Master_Account_Name_coalesce --Separate Tamara from Nakhla\nfrom\t\t__dbt__cte__oy_dbt_consumption_agg_sms as ca \n-------\nleft join \t(\n\t\t\t\tselect \t\t* \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_selling_rates_imputed\" --analytics.oy_v_selling_rates_imputed --\n\t\t\t\twhere \t\tanalytics_selling_rate is not null\n\t\t\t\torder by \tid, ingestion_date\n\t\t\t) as sr\non\t\t\t1=1\n\t\t\tand ca.charging_id = sr.charging_id::INTEGER\n\t\t\tand RTRIM(ca.bundle_name, ' ') = sr.name\n\t\t\tand ca.date_nk = sr.ingestion_date\n-------Fallback logic for subaccounts 'where charging_id is null' use-case\nleft join \t(\n\t\t\t\tselect \t\tdistinct name, parent_selling_rate \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_selling_rates_imputed\" --analytics.oy_v_selling_rates_imputed --\n\t\t\t\twhere \t\tanalytics_selling_rate is not null\n\t\t\t) as srp\non\t\t\t1=1\n\t\t\tand RTRIM(ca.bundle_name, ' ') = srp.name\n-------\t\t\nleft join \t(\n\t\t\t\tselect \t\tdistinct a.ingestion_date, a.name, a.SELLING_RATE as SELLING_RATE_ORG, b.account_id as charging_id\n\t\t\t\tfrom \t\t\"verticadb\".\"raw\".\"ocs__balance\" as a --raw.ocs__balance\n\t\t\t\tleft join \t\"verticadb\".\"raw\".\"ocs__account\" as b --raw.ocs__account\n\t\t\t\ton \t\t\ta.account_id = b.id::VARCHAR2\n\t\t\t\twhere \t\t1=1 and a.SELLING_RATE not ilike '%SAR%' and split_part(a.name,'_',1)<>'mb'\n\t\t\t\torder by \tingestion_date desc\n\t\t\t) as aa\non\t\t\t1=1\n\t\t\tand ca.charging_id = aa.charging_id::INTEGER\n\t\t\tand RTRIM(ca.bundle_name, ' ') = aa.name\n\t\t\tand ca.date_nk = aa.ingestion_date\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue as gl\non\t\t\tca.rep_month = gl.first_date and coalesce(ca.manual_odoo_id ,ca.Master_Account_ID) = gl.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_open_acc as gl_open\non\t\t\tca.rep_month = gl_open.first_date and coalesce(ca.manual_odoo_id ,ca.Master_Account_ID) = gl_open.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_adjustments as gl_adj\non\t\t\tca.rep_month = gl_adj.first_date and coalesce(ca.manual_odoo_id ,ca.Master_Account_ID) = gl_adj.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_forfeiture as gl_forfeit\non\t\t\tca.rep_month = gl_forfeit.first_date and coalesce(ca.manual_odoo_id ,ca.Master_Account_ID) = gl_forfeit.Client_ID\n-------\n\n-------\nwhere \t\t1=1 and report_month is not null\norder by \tca.charging_id, ca.date_nk\n)\nselect \t\t--distinct\n\t\t\treport_month\n\t\t\t, date_nk\n\t\t\t, charging_id\n\t\t\t, pd_user_id\n\t\t\t, pd_user_account_name\n\t\t\t, Master_Account_ID_coalesce as Master_Account_ID\n\t\t\t, Master_Account_Name_coalesce as Master_Account_Name\n\t\t\t, client_rank\n\t\t\t, Master_Account_Origin\n\t\t\t, Account_Type\n\t\t\t, bundle_name\n\t\t\t, tariff\n\t\t\t, pd_user_country\n\t\t\t, bundle_type\n\t\t\t, units\n\t\t\t, charge\n\t\t\t, round(raw_revenue,2) as raw_revenue\n\t\t\t, round(analytics_revenue,2) as analytics_revenue\n\t\t\t, round(final_revenue,2) as final_revenue\n\t\t\t, round(sum(charge) over (partition by Master_Account_ID_coalesce, report_month),2) as final_charge_month\n\t\t\t, round(sum(final_revenue) over (partition by Master_Account_ID_coalesce, report_month),2) as final_revenue_month\n\t\t\t, GL_Revenue\n\t\t\t, GL_Open_Acc_Revenue\n\t\t\t, GL_Revenue_adjustm\n\t\t\t, GL_Revenue_forfeit\n\t\t\t, round(sum(final_revenue) over (partition by Master_Account_ID_coalesce, report_month)-coalesce(GL_Open_Acc_Revenue, GL_Revenue), 2) as var\n\t\t\t, case \twhen (GL_Revenue is null or GL_Revenue=0) and (GL_Open_Acc_Revenue is null or GL_Open_Acc_Revenue=0) then null \n\t\t\t\t\tELSE round(100*((sum(final_revenue) over (partition by Master_Account_ID_coalesce, report_month))/coalesce(GL_Open_Acc_Revenue, GL_Revenue) - 1), 2)  \n\t\t\t  end as pct_var\n\t\t\t, round(sum(charge) over (partition by Master_Account_ID_coalesce, report_month, charging_id),2) as final_charge_ch_id_month\n\t\t\t, case \twhen charge=0 or charge is null then null \n\t\t\t\t\twhen bundle_type = 'mb' then round(final_revenue/units,6)\n\t\t\t  \t\telse round(final_revenue/charge,6) \n\t\t\t  end as final_selling_rate\t\t\t \n\t\t\t, current_selling_rate_value\n\t\t\t, SELLING_RATE\n\t\t\t, raw_selling_rate\n\t\t\t, analytics_selling_rate\n\t\t\t, manual_sell_rate\n\t\t\t, parent_selling_rate\n\t\t\t, hs_team , hs_manager, tcsm_manager\nfrom \t\tbase\nwhere \t\t1=1 --and charging_id = 20002456 --Saudi Abyat for Building Materials OCS anomaly https://docs.google.com/spreadsheets/d/1ryZh7N_7zbnhgZIaLkCv2u2TzWuXBn1CY02ZKPbZEtY/edit?usp=sharing\norder by \tcharging_id, date_nk\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_revenue_daily_tariff\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_revenue_daily_tariff__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n     \n\nwith  __dbt__cte__oy_dbt_consumption_agg_sms as (\n \n\nselect \t\t*\nfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_consumption_agg\"\nwhere \t\tevent_type = 'default.sms'\n            and date_nk >= '2023-01-01'\n            and Account_Type in ('Client Account - Open', 'Client Account')\n),  __dbt__cte__oy_dbt_GL_revenue as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue\n--\t\t\t\t\t\t\t, SUM(case \twhen Client_ID=3368 and GL_Reference='SMS Revenue Recognition May 2023' then 0 -- Exclude 'Nakhla Information Systems Technology' May adjustment\n--\t\t\t\t\t\t\t\t\t\telse Revenue_USD end\n--\t\t\t\t\t\t\t\t ) as GL_Revenue\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference not ilike '%Forfeiture%'\n            and GL_Reference not ilike '%Adjustments%'\n            and GL_Reference not ilike '%open account%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_open_acc as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Open_Acc_Revenue\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%open account%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_adjustments as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue_adjustm\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%Adjustments%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_forfeiture as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue_forfeit\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%Forfeiture%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),base as\n(\nselect \t\tCOALESCE (ca.rep_month, gl.first_date) as report_month\n\t\t\t, ca.*\n\t\t\t, case \twhen bundle_type='mb' then charge \n\t\t\t\t\telse ca.charge*sr.raw_selling_rate \n\t\t\t  end as raw_revenue\n\t\t\t, case \twhen bundle_type='mb' then charge \n\t\t\t\t\telse ca.charge*COALESCE(sr.manual_sell_rate, sr.analytics_selling_rate, srp.parent_selling_rate)\n\t\t\t  end as analytics_revenue\n\t\t\t, case \twhen ca.bundle_type = 'mb' and ca.Master_Account_Name='Mobile Telecommunications Company - Zain Saudi Arabia' and ca.date_nk<'2023-07-01'\n\t\t\t\t\t\t\tthen 0.0109*ca.units\n\t\t\t\t\twhen ca.bundle_type = 'mb' and ca.Master_Account_Name='Mobile Telecommunications Company - Zain Saudi Arabia' and ca.date_nk>='2023-07-01'\n\t\t\t\t\t\t\tthen 0.01*ca.units\n\t\t\t\t\twhen ca.bundle_type = 'mb' then ca.charge\n\t\t\t\t\t--0.0109 4-digit constrained which will be changed to more than 4 digit in June by Sven\n\t\t\t\t\t--https://unifonic.slack.com/archives/C04KV5EGUDC/p1684654979174349?thread_ts=1684328640.491369&cid=C04KV5EGUDC\n\t\t\t\t\t--https://unifonic.slack.com/archives/C04KV5EGUDC/p1684478079173099?thread_ts=1684328640.491369&cid=C04KV5EGUDC\n\t\t\t\t\telse ca.charge*COALESCE(sr.manual_sell_rate, sr.analytics_selling_rate, srp.parent_selling_rate)\n\t\t\t  end as final_revenue\n\t\t\t, gl.GL_Revenue, gl_open.GL_Open_Acc_Revenue, gl_adj.GL_Revenue_adjustm, gl_forfeit.GL_Revenue_forfeit\n\t\t\t, sr.SELLING_RATE\n\t\t\t, sr.raw_selling_rate, sr.analytics_selling_rate, sr.manual_sell_rate, srp.parent_selling_rate\n\t\t\t, COALESCE(ca.manual_odoo_id , ca.Master_Account_ID, gl.Client_ID::VARCHAR2) as Master_Account_ID_coalesce --Separate Tamara from Nakhla\n\t\t\t, COALESCE(ca.manual_odoo_name, ca.Master_Account_Name, gl.Client_Account_Name) as Master_Account_Name_coalesce --Separate Tamara from Nakhla\nfrom\t\t__dbt__cte__oy_dbt_consumption_agg_sms as ca \n-------\nleft join \t(\n\t\t\t\tselect \t\t* \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_selling_rates_imputed\" --analytics.oy_v_selling_rates_imputed --\n\t\t\t\twhere \t\tanalytics_selling_rate is not null\n\t\t\t\torder by \tid, ingestion_date\n\t\t\t) as sr\non\t\t\t1=1\n\t\t\tand ca.charging_id = sr.charging_id::INTEGER\n\t\t\tand RTRIM(ca.bundle_name, ' ') = sr.name\n\t\t\tand ca.date_nk = sr.ingestion_date\n-------Fallback logic for subaccounts 'where charging_id is null' use-case\nleft join \t(\n\t\t\t\tselect \t\tdistinct name, parent_selling_rate \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_selling_rates_imputed\" --analytics.oy_v_selling_rates_imputed --\n\t\t\t\twhere \t\tanalytics_selling_rate is not null\n\t\t\t) as srp\non\t\t\t1=1\n\t\t\tand RTRIM(ca.bundle_name, ' ') = srp.name\n-------\t\t\nleft join \t(\n\t\t\t\tselect \t\tdistinct a.ingestion_date, a.name, a.SELLING_RATE as SELLING_RATE_ORG, b.account_id as charging_id\n\t\t\t\tfrom \t\t\"verticadb\".\"raw\".\"ocs__balance\" as a --raw.ocs__balance\n\t\t\t\tleft join \t\"verticadb\".\"raw\".\"ocs__account\" as b --raw.ocs__account\n\t\t\t\ton \t\t\ta.account_id = b.id::VARCHAR2\n\t\t\t\twhere \t\t1=1 and a.SELLING_RATE not ilike '%SAR%' and split_part(a.name,'_',1)<>'mb'\n\t\t\t\torder by \tingestion_date desc\n\t\t\t) as aa\non\t\t\t1=1\n\t\t\tand ca.charging_id = aa.charging_id::INTEGER\n\t\t\tand RTRIM(ca.bundle_name, ' ') = aa.name\n\t\t\tand ca.date_nk = aa.ingestion_date\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue as gl\non\t\t\tca.rep_month = gl.first_date and coalesce(ca.manual_odoo_id ,ca.Master_Account_ID) = gl.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_open_acc as gl_open\non\t\t\tca.rep_month = gl_open.first_date and coalesce(ca.manual_odoo_id ,ca.Master_Account_ID) = gl_open.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_adjustments as gl_adj\non\t\t\tca.rep_month = gl_adj.first_date and coalesce(ca.manual_odoo_id ,ca.Master_Account_ID) = gl_adj.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_forfeiture as gl_forfeit\non\t\t\tca.rep_month = gl_forfeit.first_date and coalesce(ca.manual_odoo_id ,ca.Master_Account_ID) = gl_forfeit.Client_ID\n-------\n\n-------\nwhere \t\t1=1 and report_month is not null\norder by \tca.charging_id, ca.date_nk\n)\nselect \t\t--distinct\n\t\t\treport_month\n\t\t\t, date_nk\n\t\t\t, charging_id\n\t\t\t, pd_user_id\n\t\t\t, pd_user_account_name\n\t\t\t, Master_Account_ID_coalesce as Master_Account_ID\n\t\t\t, Master_Account_Name_coalesce as Master_Account_Name\n\t\t\t, client_rank\n\t\t\t, Master_Account_Origin\n\t\t\t, Account_Type\n\t\t\t, bundle_name\n\t\t\t, tariff\n\t\t\t, pd_user_country\n\t\t\t, bundle_type\n\t\t\t, units\n\t\t\t, charge\n\t\t\t, round(raw_revenue,2) as raw_revenue\n\t\t\t, round(analytics_revenue,2) as analytics_revenue\n\t\t\t, round(final_revenue,2) as final_revenue\n\t\t\t, round(sum(charge) over (partition by Master_Account_ID_coalesce, report_month),2) as final_charge_month\n\t\t\t, round(sum(final_revenue) over (partition by Master_Account_ID_coalesce, report_month),2) as final_revenue_month\n\t\t\t, GL_Revenue\n\t\t\t, GL_Open_Acc_Revenue\n\t\t\t, GL_Revenue_adjustm\n\t\t\t, GL_Revenue_forfeit\n\t\t\t, round(sum(final_revenue) over (partition by Master_Account_ID_coalesce, report_month)-coalesce(GL_Open_Acc_Revenue, GL_Revenue), 2) as var\n\t\t\t, case \twhen (GL_Revenue is null or GL_Revenue=0) and (GL_Open_Acc_Revenue is null or GL_Open_Acc_Revenue=0) then null \n\t\t\t\t\tELSE round(100*((sum(final_revenue) over (partition by Master_Account_ID_coalesce, report_month))/coalesce(GL_Open_Acc_Revenue, GL_Revenue) - 1), 2)  \n\t\t\t  end as pct_var\n\t\t\t, round(sum(charge) over (partition by Master_Account_ID_coalesce, report_month, charging_id),2) as final_charge_ch_id_month\n\t\t\t, case \twhen charge=0 or charge is null then null \n\t\t\t\t\twhen bundle_type = 'mb' then round(final_revenue/units,6)\n\t\t\t  \t\telse round(final_revenue/charge,6) \n\t\t\t  end as final_selling_rate\t\t\t \n\t\t\t, current_selling_rate_value\n\t\t\t, SELLING_RATE\n\t\t\t, raw_selling_rate\n\t\t\t, analytics_selling_rate\n\t\t\t, manual_sell_rate\n\t\t\t, parent_selling_rate\n\t\t\t, hs_team , hs_manager, tcsm_manager\nfrom \t\tbase\nwhere \t\t1=1 --and charging_id = 20002456 --Saudi Abyat for Building Materials OCS anomaly https://docs.google.com/spreadsheets/d/1ryZh7N_7zbnhgZIaLkCv2u2TzWuXBn1CY02ZKPbZEtY/edit?usp=sharing\norder by \tcharging_id, date_nk\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.live_revenue.oy_revenue_daily_tariff"}], "elapsed_time": 227.2798421382904, "args": {"write_json": true, "use_colors": true, "printer_width": 80, "version_check": true, "partial_parse": true, "static_parser": true, "profiles_dir": "/Users/oleg/.dbt", "send_anonymous_usage_stats": true, "quiet": false, "no_print": false, "cache_selected_only": false, "which": "run", "rpc_method": "run", "indirect_selection": "eager"}}