{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v4.json", "dbt_version": "1.4.4", "generated_at": "2023-08-16T10:05:26.751843Z", "invocation_id": "a3e0f0e1-ce0b-4c34-bf56-bd538f66b228", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-08-16T10:05:04.479150Z", "completed_at": "2023-08-16T10:05:04.594675Z"}, {"name": "execute", "started_at": "2023-08-16T10:05:04.595211Z", "completed_at": "2023-08-16T10:05:23.701486Z"}], "thread_id": "Thread-1", "execution_time": 19.224759101867676, "adapter_response": {"_message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_dbt_revenue_daily_enriched\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_revenue_daily_enriched__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n     \n\nwith  __dbt__cte__oy_dbt_GL_revenue as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue\n--\t\t\t\t\t\t\t, SUM(case \twhen Client_ID=3368 and GL_Reference='SMS Revenue Recognition May 2023' then 0 -- Exclude 'Nakhla Information Systems Technology' May adjustment\n--\t\t\t\t\t\t\t\t\t\telse Revenue_USD end\n--\t\t\t\t\t\t\t\t ) as GL_Revenue\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference not ilike '%Forfeiture%'\n            and GL_Reference not ilike '%Adjustments%'\n            and GL_Reference not ilike '%open account%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_open_acc as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Open_Acc_Revenue\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%open account%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_adjustments as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue_adjustm\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%Adjustments%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_forfeiture as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue_forfeit\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%Forfeiture%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),base as\n(\nselect \t\tCOALESCE (ca.rep_month, gl.first_date) as report_month\n\t\t\t, ca.*\n\t\t\t, case when top40.\"Customer Name\" is null then null else 'Top 40' end as client_rank\n\t\t\t, case \twhen bundle_type='mb' then charge \n\t\t\t\t\telse ca.charge*sr.raw_selling_rate \n\t\t\t  end as raw_revenue\n\t\t\t, case \twhen bundle_type='mb' then charge \n\t\t\t\t\telse ca.charge*COALESCE(sr.manual_sell_rate, sr.analytics_selling_rate, srp.parent_selling_rate)\n\t\t\t  end as analytics_revenue\n\t\t\t, case \twhen lmm.Master_Account_Name='Mobile Telecommunications Company - Zain Saudi Arabia' and ca.bundle_type = 'mb' then 0.0109*ca.units\n\t\t\t\t\twhen ca.units>0 and sr.manual_sell_rate is not null then ca.charge*sr.manual_sell_rate\n\t\t\t\t\twhen ca.units>0 and ABS(ca.cdr_selling_rate/COALESCE(srp.parent_selling_rate, sr.analytics_selling_rate)-1)>0.2 and bundle_type='package'\n\t\t\t\t\t\t\tthen ca.charge*COALESCE(sr.analytics_selling_rate, srp.parent_selling_rate) --to address 1.0USD use case e.g. ELM\n\t\t\t\t\twhen ca.units>0 and (cdr_revenue = 0 or cdr_revenue is null or SELLING_RATE='1.0USD') and bundle_type='package'\n\t\t\t\t\t\t\tthen ca.charge*COALESCE(sr.analytics_selling_rate, srp.parent_selling_rate)\n\t\t\t\t\t--0.0109 4-digit constrained which will be changed to more than 4 digit in June by Sven\n\t\t\t\t\t--https://unifonic.slack.com/archives/C04KV5EGUDC/p1684654979174349?thread_ts=1684328640.491369&cid=C04KV5EGUDC\n\t\t\t\t\t--https://unifonic.slack.com/archives/C04KV5EGUDC/p1684478079173099?thread_ts=1684328640.491369&cid=C04KV5EGUDC\n\t\t\t\t\telse cdr_revenue\n\t\t\t  end as final_revenue\n\t\t\t, gl.GL_Revenue, gl_open.GL_Open_Acc_Revenue, gl_adj.GL_Revenue_adjustm, gl_forfeit.GL_Revenue_forfeit\n\t\t\t, sr.SELLING_RATE\n\t\t\t, sr.raw_selling_rate, sr.analytics_selling_rate, sr.manual_sell_rate, srp.parent_selling_rate\n\t\t\t, COALESCE(ca.manual_odoo_id , lmm.Master_Account_ID, gl.Client_ID::VARCHAR2) as Master_Account_ID --Separate Tamara from Nakhla\n\t\t\t, COALESCE(ca.manual_odoo_name, lmm.Master_Account_Name, gl.Client_Account_Name) as Master_Account_Name --Separate Tamara from Nakhla\n\t\t\t, lmm.Master_Account_Origin, sa.Account_Type\nfrom\t\t\"verticadb\".\"analytics\".\"oy_dbt_consumption\" as ca \n-------\nleft join \t(\n\t\t\t\tselect \t\t* \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_selling_rates_imputed\" --analytics.oy_v_selling_rates_imputed --\n\t\t\t\twhere \t\tanalytics_selling_rate is not null\n\t\t\t\torder by \tid, ingestion_date\n\t\t\t) as sr\non\t\t\t1=1\n\t\t\tand ca.charging_id = sr.charging_id::INTEGER\n\t\t\tand RTRIM(ca.bundle_name, ' ') = sr.name\n\t\t\tand ca.date_nk = sr.ingestion_date\n-------Fallback logic for subaccounts 'where charging_id is null' use-case\nleft join \t(\n\t\t\t\tselect \t\tdistinct name, parent_selling_rate \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_selling_rates_imputed\" --analytics.oy_v_selling_rates_imputed --\n\t\t\t\twhere \t\tanalytics_selling_rate is not null\n\t\t\t) as srp\non\t\t\t1=1\n\t\t\tand RTRIM(ca.bundle_name, ' ') = srp.name\n-------\t\t\nleft join \t(\n\t\t\t\tselect \t\tdistinct a.ingestion_date, a.name, a.SELLING_RATE as SELLING_RATE_ORG, b.account_id as charging_id\n\t\t\t\tfrom \t\t\"verticadb\".\"raw\".\"ocs__balance\" as a --raw.ocs__balance\n\t\t\t\tleft join \t\"verticadb\".\"raw\".\"ocs__account\" as b --raw.ocs__account\n\t\t\t\ton \t\t\ta.account_id = b.id::VARCHAR2\n\t\t\t\twhere \t\t1=1 and a.SELLING_RATE not ilike '%SAR%' and split_part(a.name,'_',1)<>'mb'\n\t\t\t\torder by \tingestion_date desc\n\t\t\t) as aa\non\t\t\t1=1\n\t\t\tand ca.charging_id = aa.charging_id::INTEGER\n\t\t\tand RTRIM(ca.bundle_name, ' ') = aa.name\n\t\t\tand ca.date_nk = aa.ingestion_date\n-------\nleft join \t(\t\n\t\t\t\tselect \t\tCharging_ID_L0\n\t\t\t\t\t\t\t, COALESCE(manual_odoo_id, Master_Account_ID) as Master_Account_ID\n\t\t\t\t\t\t\t, COALESCE(manual_odoo_name, Master_Account_Name) as Master_Account_Name\n\t\t\t\t\t\t\t, Master_Account_Origin\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"lm_v_master_account_mapping\" --analytics.lm_v_master_account_mapping\n\t\t\t) as lmm\non \t\t\tca.charging_id = lmm.Charging_ID_L0\n-------\nleft join\t\"verticadb\".\"analytics\".\"oy_dbt_special_accounts\" as sa --analytics.oy_special_accounts\non \t\t\tca.charging_id = sa.charging_id\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue as gl\non\t\t\tca.rep_month = gl.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_open_acc as gl_open\non\t\t\tca.rep_month = gl_open.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl_open.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_adjustments as gl_adj\non\t\t\tca.rep_month = gl_adj.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl_adj.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_forfeiture as gl_forfeit\non\t\t\tca.rep_month = gl_forfeit.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl_forfeit.Client_ID\n-------\nleft join \t(\n\t\t\t\tselect \t\t* \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_sales_plans_gsheet\" --sandbox.oy_sales_plans_gsheet \n\t\t\t\twhere\t\tNo<>3 order by No\n\t\t\t) as top40\non \t\t\tcoalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = top40.\"Odoo ID\"\n-------\nwhere \t\t1=1 and report_month is not null\norder by \tca.charging_id, ca.date_nk\n)\nselect \t\treport_month\n\t\t\t, date_nk\n\t\t\t, charging_id\n\t\t\t, pd_user_id\n\t\t\t, pd_user_account_name\n\t\t\t, Master_Account_ID\n\t\t\t, Master_Account_Name\n\t\t\t, client_rank\n\t\t\t, Master_Account_Origin\n\t\t\t, case when Account_Type is null then 'Other' else Account_Type end as Account_Type\n\t\t\t, bundle_name\n\t\t\t, pd_user_country\n\t\t\t, bundle_type\n\t\t\t, units\n\t\t\t, charge\n\t\t\t, round(cdr_revenue,2) as cdr_revenue\n\t\t\t, round(raw_revenue,2) as raw_revenue\n\t\t\t, round(analytics_revenue,2) as analytics_revenue\n\t\t\t, round(final_revenue,2) as final_revenue\n\t\t\t, round(sum(charge) over (partition by Master_Account_ID, report_month),2) as final_charge_month\n\t\t\t, round(sum(final_revenue) over (partition by Master_Account_ID, report_month),2) as final_revenue_month\n\t\t\t, GL_Revenue\n\t\t\t, GL_Open_Acc_Revenue\n\t\t\t, GL_Revenue_adjustm\n\t\t\t, GL_Revenue_forfeit\n\t\t\t, round(sum(final_revenue) over (partition by Master_Account_ID, report_month)-coalesce(GL_Open_Acc_Revenue, GL_Revenue), 2) as var\n\t\t\t, case \twhen (GL_Revenue is null or GL_Revenue=0) and (GL_Open_Acc_Revenue is null or GL_Open_Acc_Revenue=0) then null \n\t\t\t\t\tELSE round(100*((sum(final_revenue) over (partition by Master_Account_ID, report_month))/coalesce(GL_Open_Acc_Revenue, GL_Revenue) - 1), 2)  \n\t\t\t  end as pct_var\n\t\t\t, round(sum(charge) over (partition by Master_Account_ID, report_month, charging_id),2) as final_charge_ch_id_month\n\t\t\t, case \twhen charge=0 or charge is null then null \n\t\t\t\t\twhen bundle_type = 'mb' then round(final_revenue/units,6)\n\t\t\t  \t\telse round(final_revenue/charge,6) \n\t\t\t  end as final_selling_rate\t\t\t \n\t\t\t, SELLING_RATE\n\t\t\t, raw_selling_rate\n\t\t\t, cdr_selling_rate\n\t\t\t, analytics_selling_rate\n\t\t\t, manual_sell_rate\n\t\t\t, parent_selling_rate\n\t\t\t, tm.hs_team , tm.hs_manager, tm.tcsm_manager\nfrom \t\tbase\nleft join \t(\n\t\t\t\tselect \t\tdistinct\n\t\t\t\t\t\t\todoo_id, odoo_name, email, hs_team, hs_manager, hs_email, tcsm_manager\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_v_odoo_hs_team_manager\" --analytics.oy_v_odoo_hs_team_manager\n\t\t\t\twhere \t\ths_team is not null and hs_manager is not null\n\t\t\t\torder by \ths_manager\n\t\t\t)as tm \non \t\t\ttm.odoo_id = base.Master_Account_ID\nwhere \t\t1=1 --and charging_id = 20002456 --Saudi Abyat for Building Materials OCS anomaly https://docs.google.com/spreadsheets/d/1ryZh7N_7zbnhgZIaLkCv2u2TzWuXBn1CY02ZKPbZEtY/edit?usp=sharing\norder by \tcharging_id, date_nk\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "code": "None", "rows_affected": -1}, "message": "Operation: /* {\"app\": \"dbt\", \"dbt_version\": \"1.4.4\", \"profile_name\": \"live_revenue\", \"target_name\": \"dev\", \"node_id\": \"model.live_revenue.oy_dbt_revenue_daily_enriched\"} */\n\n  \n    create  table\n    \"verticadb\".\"analytics\".\"oy_dbt_revenue_daily_enriched__dbt_tmp\"\n    \n    INCLUDE SCHEMA PRIVILEGES as (\n     \n\nwith  __dbt__cte__oy_dbt_GL_revenue as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue\n--\t\t\t\t\t\t\t, SUM(case \twhen Client_ID=3368 and GL_Reference='SMS Revenue Recognition May 2023' then 0 -- Exclude 'Nakhla Information Systems Technology' May adjustment\n--\t\t\t\t\t\t\t\t\t\telse Revenue_USD end\n--\t\t\t\t\t\t\t\t ) as GL_Revenue\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference not ilike '%Forfeiture%'\n            and GL_Reference not ilike '%Adjustments%'\n            and GL_Reference not ilike '%open account%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_open_acc as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Open_Acc_Revenue\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%open account%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_adjustments as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue_adjustm\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%Adjustments%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),  __dbt__cte__oy_dbt_GL_revenue_forfeiture as (\n\n\nselect \t\tfirst_date, Client_ID , Client_Account_Name, sum(Revenue_USD) as GL_Revenue_forfeit\nfrom \t\t\"verticadb\".\"analytics\".\"oy_v_GL_revenue_reference\" --analytics.oy_v_GL_revenue_reference --analytics.oy_v_GL_revenue_all_domains replaced\nwhere \t\t1=1 \n            and year >= 2023\n            and business_domain = 'SMS'\n            and Client_ID is not NULL \n            and GL_Reference ilike '%Forfeiture%'\n            --and Client_ID=3368\n            group by \t1,2,3\norder by \tClient_ID , first_date desc\n),base as\n(\nselect \t\tCOALESCE (ca.rep_month, gl.first_date) as report_month\n\t\t\t, ca.*\n\t\t\t, case when top40.\"Customer Name\" is null then null else 'Top 40' end as client_rank\n\t\t\t, case \twhen bundle_type='mb' then charge \n\t\t\t\t\telse ca.charge*sr.raw_selling_rate \n\t\t\t  end as raw_revenue\n\t\t\t, case \twhen bundle_type='mb' then charge \n\t\t\t\t\telse ca.charge*COALESCE(sr.manual_sell_rate, sr.analytics_selling_rate, srp.parent_selling_rate)\n\t\t\t  end as analytics_revenue\n\t\t\t, case \twhen lmm.Master_Account_Name='Mobile Telecommunications Company - Zain Saudi Arabia' and ca.bundle_type = 'mb' then 0.0109*ca.units\n\t\t\t\t\twhen ca.units>0 and sr.manual_sell_rate is not null then ca.charge*sr.manual_sell_rate\n\t\t\t\t\twhen ca.units>0 and ABS(ca.cdr_selling_rate/COALESCE(srp.parent_selling_rate, sr.analytics_selling_rate)-1)>0.2 and bundle_type='package'\n\t\t\t\t\t\t\tthen ca.charge*COALESCE(sr.analytics_selling_rate, srp.parent_selling_rate) --to address 1.0USD use case e.g. ELM\n\t\t\t\t\twhen ca.units>0 and (cdr_revenue = 0 or cdr_revenue is null or SELLING_RATE='1.0USD') and bundle_type='package'\n\t\t\t\t\t\t\tthen ca.charge*COALESCE(sr.analytics_selling_rate, srp.parent_selling_rate)\n\t\t\t\t\t--0.0109 4-digit constrained which will be changed to more than 4 digit in June by Sven\n\t\t\t\t\t--https://unifonic.slack.com/archives/C04KV5EGUDC/p1684654979174349?thread_ts=1684328640.491369&cid=C04KV5EGUDC\n\t\t\t\t\t--https://unifonic.slack.com/archives/C04KV5EGUDC/p1684478079173099?thread_ts=1684328640.491369&cid=C04KV5EGUDC\n\t\t\t\t\telse cdr_revenue\n\t\t\t  end as final_revenue\n\t\t\t, gl.GL_Revenue, gl_open.GL_Open_Acc_Revenue, gl_adj.GL_Revenue_adjustm, gl_forfeit.GL_Revenue_forfeit\n\t\t\t, sr.SELLING_RATE\n\t\t\t, sr.raw_selling_rate, sr.analytics_selling_rate, sr.manual_sell_rate, srp.parent_selling_rate\n\t\t\t, COALESCE(ca.manual_odoo_id , lmm.Master_Account_ID, gl.Client_ID::VARCHAR2) as Master_Account_ID --Separate Tamara from Nakhla\n\t\t\t, COALESCE(ca.manual_odoo_name, lmm.Master_Account_Name, gl.Client_Account_Name) as Master_Account_Name --Separate Tamara from Nakhla\n\t\t\t, lmm.Master_Account_Origin, sa.Account_Type\nfrom\t\t\"verticadb\".\"analytics\".\"oy_dbt_consumption\" as ca \n-------\nleft join \t(\n\t\t\t\tselect \t\t* \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_selling_rates_imputed\" --analytics.oy_v_selling_rates_imputed --\n\t\t\t\twhere \t\tanalytics_selling_rate is not null\n\t\t\t\torder by \tid, ingestion_date\n\t\t\t) as sr\non\t\t\t1=1\n\t\t\tand ca.charging_id = sr.charging_id::INTEGER\n\t\t\tand RTRIM(ca.bundle_name, ' ') = sr.name\n\t\t\tand ca.date_nk = sr.ingestion_date\n-------Fallback logic for subaccounts 'where charging_id is null' use-case\nleft join \t(\n\t\t\t\tselect \t\tdistinct name, parent_selling_rate \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_selling_rates_imputed\" --analytics.oy_v_selling_rates_imputed --\n\t\t\t\twhere \t\tanalytics_selling_rate is not null\n\t\t\t) as srp\non\t\t\t1=1\n\t\t\tand RTRIM(ca.bundle_name, ' ') = srp.name\n-------\t\t\nleft join \t(\n\t\t\t\tselect \t\tdistinct a.ingestion_date, a.name, a.SELLING_RATE as SELLING_RATE_ORG, b.account_id as charging_id\n\t\t\t\tfrom \t\t\"verticadb\".\"raw\".\"ocs__balance\" as a --raw.ocs__balance\n\t\t\t\tleft join \t\"verticadb\".\"raw\".\"ocs__account\" as b --raw.ocs__account\n\t\t\t\ton \t\t\ta.account_id = b.id::VARCHAR2\n\t\t\t\twhere \t\t1=1 and a.SELLING_RATE not ilike '%SAR%' and split_part(a.name,'_',1)<>'mb'\n\t\t\t\torder by \tingestion_date desc\n\t\t\t) as aa\non\t\t\t1=1\n\t\t\tand ca.charging_id = aa.charging_id::INTEGER\n\t\t\tand RTRIM(ca.bundle_name, ' ') = aa.name\n\t\t\tand ca.date_nk = aa.ingestion_date\n-------\nleft join \t(\t\n\t\t\t\tselect \t\tCharging_ID_L0\n\t\t\t\t\t\t\t, COALESCE(manual_odoo_id, Master_Account_ID) as Master_Account_ID\n\t\t\t\t\t\t\t, COALESCE(manual_odoo_name, Master_Account_Name) as Master_Account_Name\n\t\t\t\t\t\t\t, Master_Account_Origin\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"lm_v_master_account_mapping\" --analytics.lm_v_master_account_mapping\n\t\t\t) as lmm\non \t\t\tca.charging_id = lmm.Charging_ID_L0\n-------\nleft join\t\"verticadb\".\"analytics\".\"oy_dbt_special_accounts\" as sa --analytics.oy_special_accounts\non \t\t\tca.charging_id = sa.charging_id\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue as gl\non\t\t\tca.rep_month = gl.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_open_acc as gl_open\non\t\t\tca.rep_month = gl_open.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl_open.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_adjustments as gl_adj\non\t\t\tca.rep_month = gl_adj.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl_adj.Client_ID\n-------\nfull join\t__dbt__cte__oy_dbt_GL_revenue_forfeiture as gl_forfeit\non\t\t\tca.rep_month = gl_forfeit.first_date and coalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = gl_forfeit.Client_ID\n-------\nleft join \t(\n\t\t\t\tselect \t\t* \n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_dbt_sales_plans_gsheet\" --sandbox.oy_sales_plans_gsheet \n\t\t\t\twhere\t\tNo<>3 order by No\n\t\t\t) as top40\non \t\t\tcoalesce(ca.manual_odoo_id ,lmm.Master_Account_ID) = top40.\"Odoo ID\"\n-------\nwhere \t\t1=1 and report_month is not null\norder by \tca.charging_id, ca.date_nk\n)\nselect \t\treport_month\n\t\t\t, date_nk\n\t\t\t, charging_id\n\t\t\t, pd_user_id\n\t\t\t, pd_user_account_name\n\t\t\t, Master_Account_ID\n\t\t\t, Master_Account_Name\n\t\t\t, client_rank\n\t\t\t, Master_Account_Origin\n\t\t\t, case when Account_Type is null then 'Other' else Account_Type end as Account_Type\n\t\t\t, bundle_name\n\t\t\t, pd_user_country\n\t\t\t, bundle_type\n\t\t\t, units\n\t\t\t, charge\n\t\t\t, round(cdr_revenue,2) as cdr_revenue\n\t\t\t, round(raw_revenue,2) as raw_revenue\n\t\t\t, round(analytics_revenue,2) as analytics_revenue\n\t\t\t, round(final_revenue,2) as final_revenue\n\t\t\t, round(sum(charge) over (partition by Master_Account_ID, report_month),2) as final_charge_month\n\t\t\t, round(sum(final_revenue) over (partition by Master_Account_ID, report_month),2) as final_revenue_month\n\t\t\t, GL_Revenue\n\t\t\t, GL_Open_Acc_Revenue\n\t\t\t, GL_Revenue_adjustm\n\t\t\t, GL_Revenue_forfeit\n\t\t\t, round(sum(final_revenue) over (partition by Master_Account_ID, report_month)-coalesce(GL_Open_Acc_Revenue, GL_Revenue), 2) as var\n\t\t\t, case \twhen (GL_Revenue is null or GL_Revenue=0) and (GL_Open_Acc_Revenue is null or GL_Open_Acc_Revenue=0) then null \n\t\t\t\t\tELSE round(100*((sum(final_revenue) over (partition by Master_Account_ID, report_month))/coalesce(GL_Open_Acc_Revenue, GL_Revenue) - 1), 2)  \n\t\t\t  end as pct_var\n\t\t\t, round(sum(charge) over (partition by Master_Account_ID, report_month, charging_id),2) as final_charge_ch_id_month\n\t\t\t, case \twhen charge=0 or charge is null then null \n\t\t\t\t\twhen bundle_type = 'mb' then round(final_revenue/units,6)\n\t\t\t  \t\telse round(final_revenue/charge,6) \n\t\t\t  end as final_selling_rate\t\t\t \n\t\t\t, SELLING_RATE\n\t\t\t, raw_selling_rate\n\t\t\t, cdr_selling_rate\n\t\t\t, analytics_selling_rate\n\t\t\t, manual_sell_rate\n\t\t\t, parent_selling_rate\n\t\t\t, tm.hs_team , tm.hs_manager, tm.tcsm_manager\nfrom \t\tbase\nleft join \t(\n\t\t\t\tselect \t\tdistinct\n\t\t\t\t\t\t\todoo_id, odoo_name, email, hs_team, hs_manager, hs_email, tcsm_manager\n\t\t\t\tfrom \t\t\"verticadb\".\"analytics\".\"oy_v_odoo_hs_team_manager\" --analytics.oy_v_odoo_hs_team_manager\n\t\t\t\twhere \t\ths_team is not null and hs_manager is not null\n\t\t\t\torder by \ths_manager\n\t\t\t)as tm \non \t\t\ttm.odoo_id = base.Master_Account_ID\nwhere \t\t1=1 --and charging_id = 20002456 --Saudi Abyat for Building Materials OCS anomaly https://docs.google.com/spreadsheets/d/1ryZh7N_7zbnhgZIaLkCv2u2TzWuXBn1CY02ZKPbZEtY/edit?usp=sharing\norder by \tcharging_id, date_nk\n  )\n \n\n  \n\n    \n \n  ;\n\n  \n      \n        \n    \n\n      , Message: CommandComplete: command_tag = \"CREATE TABLE\", Code: None, Rows: -1, Arraysize: 1", "failures": null, "unique_id": "model.live_revenue.oy_dbt_revenue_daily_enriched"}], "elapsed_time": 32.32311511039734, "args": {"write_json": true, "use_colors": true, "printer_width": 80, "version_check": true, "partial_parse": true, "static_parser": true, "profiles_dir": "/Users/oleg/.dbt", "send_anonymous_usage_stats": true, "quiet": false, "no_print": false, "cache_selected_only": false, "select": ["oy_dbt_revenue_daily_enriched"], "which": "run", "rpc_method": "run", "indirect_selection": "eager"}}